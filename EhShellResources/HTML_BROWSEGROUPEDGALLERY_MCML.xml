<Mcml xmlns="http://schemas.microsoft.com/2006/mcml" xmlns:cor ="assembly://MsCorLib/System" xmlns:coll="assembly://MsCorLib/System.Collections" xmlns:shell="assembly://Microsoft.MediaCenter.Shell/Microsoft.MediaCenter.Shell" xmlns:comm="res://Microsoft.MediaCenter.Shell!Globals.mcml" xmlns:me="Me"><Aggregate Source="res://Microsoft.MediaCenter.Shell!BrowseGalleryItem.mcml"/><UI Name="GalleryGroup"><Properties><shell:IBrowseGroup Name="Model" IBrowseGroup="$Required"/><shell:IBrowsePivot Name="Pivot" IBrowsePivot="$Required"/><cor:String Name="ContentItemTemplate" String="$Required"/><Index Name="MyIndex" Index="$Required"/><IntRangedValue Name="SelectedGroup" IntRangedValue="$Required"/><IntRangedValue Name="SelectedIndex" IntRangedValue="$Required"/><PropertySet Name="ItemProperties" PropertySet="$Required"/><Inset Name="GroupLabelColorMarginsNoFocus" Inset="0, 0, 0, 0"/><Inset Name="GroupLabelColorMargins" Inset="-20, 0, 0, 0"/><cor:Int32 Name="LabelRotation" Int32="90"/><ILayout Name="LabelFlowLayout" ILayout="global://me:GalleryGroupDefaultLayout"/><cor:String Name="OverlayContentTemplate" String="null"/></Properties><Locals><Environment Name="Environment"/><shell:RepeatHelper Name="RepeatHelper"/><RepeaterFocusHelper Name="FocusOrderHelper"/><cor:Int32 Name="OffsetIndex" Int32="0"/><MathTransformer Name="OffsetCalc" Absolute="true"/><IntRangedValue Name="TotalCount" IntRangedValue="[ItemProperties.#TotalCount!IntRangedValue]"/><EditableText Name="TransitionState" EditableText="[ItemProperties.#TransitionState!EditableText]"/><PropertySet Name="GroupProperties"><Entries><IntRangedValue Name="GroupIndex" Value="[MyIndex.Value]"/><IntRangedValue Name="GroupCount" Value="1"/></Entries></PropertySet><TransformAnimation Name="TransitionToForward" Source="animation://me:Browse.Gallery.Group.Label.NavigateToForward"/><TransformAnimation Name="TransitionToBackward" Source="animation://me:Browse.Gallery.Group.Label.NavigateToBackward"/><TransformAnimation Name="TransitionAwayForward" Source="animation://me:Browse.Gallery.Group.Label.NavigateAwayForward"/><TransformAnimation Name="TransitionAwayBackward" Source="animation://me:Browse.Gallery.Group.Label.NavigateAwayBackward"/></Locals><Rules><Default Target="[Accessible.Name]" Value="[Model.Description]"/><Default Target="[Accessible.Role]" Value="Grouping"/><Condition Source="[Pivot.AdditionalContentItemMappings]" ConditionOp="NotEquals" SourceValue="null"><Actions><Invoke Target="[RepeatHelper.AddMappings]" mappings="[Pivot.AdditionalContentItemMappings]"/></Actions></Condition><Default Target="[Repeater.RepeatedItem]" Value="[RepeatHelper.RepeatedHandler]"/><Default Target="[Repeater.PreRepeatHandler]" Value="[RepeatHelper.ContentTypeHandler]"/><Binding Target="[GroupProperties.#GroupCount!IntRangedValue.Value]" Source="[Model.Content.Count]"/><Binding Source="[Model]" Target="[Label.Model]" /><Binding Source="[Model.ContentLabelTemplate]" Target="[Label.Source]"/><Rule><Conditions><Equality ConditionOp="Equals" Source="[SelectedGroup.Value]" Value="[MyIndex.Value]"/></Conditions><Actions><Set Target="[Label.UseFocusLayout]" Value="true"/></Actions></Rule><Rule><Conditions><Equality ConditionOp="NotEquals" Source="[SelectedGroup.Value]" Value="[MyIndex.Value]"/></Conditions><Actions><Set Target="[Label.UseFocusLayout]" Value="false"/></Actions></Rule><Rule><Conditions><Equality Source="[Label.UseFocusLayout]" Value="true"/><Equality Source="[TransitionState.Value]" Value="Idle"/><Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/></Conditions><Actions><Invoke Target="[Label.AttachAnimation]" animation="animation://me:Browse.GroupedGallery.GroupLabel.Focus" InvokePolicy="Synchronous"/><Set Target="[Label.Margins]" Value="[GroupLabelColorMargins]"/></Actions></Rule><Rule><Conditions><Equality Source="[Label.UseFocusLayout]" Value="true"/><Equality Source="[TransitionState.Value]" Value="Idle"/><Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/></Conditions><Actions><Invoke Target="[Label.AttachAnimation]" animation="animation://me:Browse.GroupedGallery.GroupLabel.Focus.GDI" InvokePolicy="Synchronous"/><Set Target="[Label.Margins]" Value="[GroupLabelColorMargins]"/></Actions></Rule><Rule><Conditions><Equality Source="[Label.UseFocusLayout]" Value="false"/><Equality Source="[Environment.Is2DAnimationExperience]" Value="false"/></Conditions><Actions><Invoke Target="[Label.AttachAnimation]" animation="animation://me:Browse.GroupedGallery.GroupLabel.UnFocus" InvokePolicy="Synchronous"/><Set Target="[Label.Margins]" Value="[GroupLabelColorMarginsNoFocus]"/></Actions></Rule><Rule><Conditions><Equality Source="[Label.UseFocusLayout]" Value="false"/><Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/></Conditions><Actions><Invoke Target="[Label.AttachAnimation]" animation="animation://me:Browse.GroupedGallery.GroupLabel.UnFocus.GDI" InvokePolicy="Synchronous"/><Set Target="[Label.Margins]" Value="[GroupLabelColorMarginsNoFocus]"/></Actions></Rule><Rule><Conditions><Equality Source="[Input.DeepKeyFocus]" Value="true"/></Conditions><Actions><Set Target="[SelectedGroup.Value]" Value="[MyIndex.Value]"/></Actions></Rule><Rule><Conditions><IsValid Source="[Model.Content.Count]"/><Equality Source="[Input.DeepKeyFocus]" Value="true"/></Conditions><Actions><Set Target="[TotalCount.Value]" Value="[Model.Content.Count]"/></Actions></Rule><Rule><Conditions><Equality Source="[Model.Content.Count]" ConditionOp="GreaterThan" Value="[SelectedIndex.Value]"/><Equality Source="[SelectedGroup.Value]" Value="[MyIndex.Value]"/><IsValid Source="[SelectedIndex.Value]"/></Conditions><Actions><Set Target="[FocusOrderHelper.RequestFocusIndex]" Value="[SelectedIndex.Value]"/><Set Target="[FocusOrderHelper.SetEssentialIndexOnRepeater]" Value="true"/><Set Target="[FocusOrderHelper.SetAreaOfInterestOnRepeatedItem]" Value="true"/></Actions></Rule><Rule><Conditions><Equality Source="[Model.Content.Count]" ConditionOp="LessThanOrEquals" Value="[SelectedIndex.Value]"/><Equality Source="[SelectedGroup.Value]" Value="[MyIndex.Value]"/><IsValid Source="[SelectedIndex.Value]"/></Conditions><Actions><Set Target="[SelectedIndex.Value]" Value="[Model.Content.Count]"><Transformer><MathTransformer SubtractInt="1"/></Transformer></Set><Set Target="[FocusOrderHelper.RequestFocusIndex]" Value="[SelectedIndex.Value]"/><Set Target="[FocusOrderHelper.SetEssentialIndexOnRepeater]" Value="true"/><Set Target="[FocusOrderHelper.SetAreaOfInterestOnRepeatedItem]" Value="true"/></Actions></Rule><Default Target="[FocusOrderHelper.SetEssentialIndexOnRepeater]" Value="false"/><Default Target="[FocusOrderHelper.SetAreaOfInterestOnRepeatedItem]" Value="false"/><Default Target="[FocusOrderHelper.Repeater]" Value="[Repeater]"/><Changed Source="[SelectedGroup.Value]" InitialEvaluate="true"><Actions><Set Target="[OffsetCalc.SubtractInt]" Value="[SelectedGroup.Value]"/><Set Target="[OffsetIndex]" Value="[MyIndex.Value]" Transformer="[OffsetCalc]"/></Actions></Changed><Condition Source="[TransitionState.Value]" SourceValue="NavigatingToForward"><Actions><Set Target="[TransitionToForward.Delay]" Value="[OffsetIndex]"><Transformer><MathTransformer Multiply="0.1" Type="Single"/></Transformer></Set><Invoke Target="[GroupLabel.AttachAnimation]" animation="[TransitionToForward]" InvokePolicy="Synchronous"/></Actions></Condition><Condition Source="[TransitionState.Value]" SourceValue="NavigatingToBackward"><Actions><Set Target="[TransitionToBackward.Delay]" Value="[OffsetIndex]"><Transformer><MathTransformer Multiply="0.033" Type="Single"/></Transformer></Set><Invoke Target="[GroupLabel.AttachAnimation]" animation="[TransitionToBackward]" InvokePolicy="Synchronous"/></Actions></Condition><Condition Source="[TransitionState.Value]" SourceValue="NavigatingAwayForward"><Actions><Set Target="[TransitionAwayForward.Delay]" Value="[OffsetIndex]"><Transformer><MathTransformer Multiply="0.02" Type="Single"/></Transformer></Set><Invoke Target="[GroupLabel.AttachAnimation]" animation="[TransitionAwayForward]" InvokePolicy="Synchronous"/></Actions></Condition><Condition Source="[TransitionState.Value]" SourceValue="NavigatingAwayBackward"><Actions><Set Target="[TransitionAwayBackward.Delay]" Value="[OffsetIndex]"><Transformer><MathTransformer Multiply="0.01" Type="Single"/></Transformer></Set><Invoke Target="[GroupLabel.AttachAnimation]" animation="[TransitionAwayBackward]" InvokePolicy="Synchronous"/></Actions></Condition></Rules><Content><Panel Margins="30, 0, 0, 0" Layout="[LabelFlowLayout]"><Children><Panel Name="GroupLabel" Padding="0, 0, 5, 0"><Layout><RotateLayout AngleDegrees="[LabelRotation]"/></Layout><Children><me:BaseContentLabel Name="Label" Model="[Model]" Source="[Model.ContentLabelTemplate]" MaximumSize="400,0" Margins="[GroupLabelColorMargins]" /></Children></Panel><Repeater Name="Repeater" Source="[Model.Content]" ContentName="Item" Navigation="FlowVertical"><Layout><GridLayout Orientation="Vertical" AllowWrap="true" Spacing="2, 2"/></Layout></Repeater></Children></Panel></Content><Content Name="Item"><me:GalleryItem Model="[RepeatedItem!ICommand]" SelectionPolicy="[Pivot.ContentSelectionPolicy]" Source="[ContentItemTemplate]" ShowLabel="false" Index="[RepeatedItemIndex]" ItemProperties="[ItemProperties]" GroupProperties="[GroupProperties]" OverlayContentTemplate="[OverlayContentTemplate]"/></Content></UI><UI Name="BaseContentLabel"><Properties><shell:IBrowseGroup Name="Model" IBrowseGroup="$Required"/><cor:Boolean Name="UseFocusLayout" Boolean="false"/></Properties></UI><UI Name="TextContentLabel" BaseUI="me:BaseContentLabel"><Properties><Font Name="GroupLabelFontNoFocus" FontName="global://comm:MainFontFace" FontSize="18"/><Color Name="GroupLabelColorNoFocus" Color="color://comm:LightBlue"/><Color Name="GroupLabelColorFocus" Color="color://comm:MediumBlue"/></Properties><Rules><Rule><Conditions><Equality Source="[UseFocusLayout]" Value="true"/></Conditions><Actions><Set Target="[Label.Color]" Value="[GroupLabelColorFocus]"/></Actions></Rule><Rule><Conditions><Equality Source="[UseFocusLayout]" Value="false"/></Conditions><Actions><Set Target="[Label.Color]" Value="[GroupLabelColorNoFocus]"/></Actions></Rule><Binding Source="[Model.Description]" Target="[Label.Content]"><Transformer><FormatTransformer ToUpper="true"/></Transformer></Binding></Rules><Content><FancyText Name="Label" Font="[GroupLabelFontNoFocus]" Color="[GroupLabelColorNoFocus]"/></Content></UI><LegacyHorizontalFlowLayout Name="GalleryGroupDefaultLayout"/></Mcml>
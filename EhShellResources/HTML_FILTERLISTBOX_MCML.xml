<Mcml xmlns ="http://schemas.microsoft.com/2006/mcml" 
      xmlns:cor ="assembly://MSCorLib/System" 
      xmlns:coll ="assembly://MsCorLib/System.Collections" 
      xmlns:video ="assembly://ehshell/MediaCenter.Video" 
      xmlns:draw ="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.UI.Drawing"
      xmlns:shell ="assembly://Microsoft.MediaCenter.Shell/Microsoft.MediaCenter.Shell" 
      xmlns:ctl ="res://Microsoft.MediaCenter.Shell!Controls.mcml" 
      xmlns:comm ="res://Microsoft.MediaCenter.Shell!Globals.mcml" 
      xmlns:me ="Me">
  
  <UI Name="GuideFilterListBox" BaseUI="ctl:ListBox">
    <Properties>
      <shell:ITableModel Name="TableModel" ITableModel="$Required"/>
      <Command Name="HideMenu"/>
      <Image Name="BackgroundImage" Source="res://ehres!Epg.Cell.Background.Dark.png" NineGrid="2,2,2,2"/>
      <GridLayout Name="FlowLayout" Orientation="Vertical" Spacing="0, 3"/>
      <Inset Name="ListBoxPadding" Inset="0,0,0,0"/>
      <Inset Name="ListBoxMargins" Inset="-1,0,0,0"/>
      <cor:Single Name="FadeSize" Single="0"/>
      <cor:Int32 Name="FocusPadding" Int32="0"/>
    </Properties>
    <Rules>
      <Default Target="[Background.Visible]" Value="true">
        <Conditions>
          <IsValid Source="[BackgroundImage]"/>
        </Conditions>
      </Default>
      <Default Target="[Scroller.Navigation]" Value="RememberFocus"/>
      <Changed Source="[TableModel!video:EpgTable.FilterIndex]">
        <Actions>
          <Invoke Target="[Repeater.NavigateIntoIndex]" index="[TableModel!video:EpgTable.FilterIndex]"/>
        </Actions>
      </Changed>
    </Rules>
    <Content Name="Item">
      <Panel Margins="5,0,0,0">
        <Children>
          <me:FilteredGuide Model="[HideMenu]" Table="[TableModel]" ActionCommand="[RepeatedItem!Command]" ListPanning="[IsPanning]">
            <Animations>
              <TransformByAttributeAnimation Attribute="Index" Name="ItemsShow" Delay="0.1" Override="[RepeatedItemIndex.Value!cor:Single]">
                <Source>
                  <Animation Loop="0" Type="Show" Intensity="Intensive">
                    <Keyframes>
                      <AlphaKeyframe Time="0.0" Value="0.0"/>
                      <AlphaKeyframe Time="0.21" Value="0.9"/>
                    </Keyframes>
                  </Animation>
                </Source>
              </TransformByAttributeAnimation>
              <TransformByAttributeAnimation Attribute="Index" Name="ItemsHide" Delay="0.0" Override="[RepeatedItemIndex.Value!cor:Single]">
                <Source>
                  <Animation Loop="0" Type="Hide" Intensity="Intensive">
                    <Keyframes>
                      <AlphaKeyframe Time="0.0" Value="0.9"/>
                      <AlphaKeyframe Time="0.1" Value="0.0"/>
                    </Keyframes>
                  </Animation>
                </Source>
              </TransformByAttributeAnimation>
            </Animations>
          </me:FilteredGuide>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="FilteredGuide" BaseUI="ctl:Button">
    <Properties>
      <shell:ITableModel Name="Table" ITableModel="$Required"/>
      <Command Name="ActionCommand"/>
      <Inset Name="FocusLabelMargins" Inset="12, 6, 8, 0"/>
      <BooleanChoice Name="ListPanning"/>
      <draw:BaseImage Name="FocusImage" BaseImage="metaimage://comm:Epg.Button.Focus"/>
      <draw:BaseImage Name="FocusOverlayImage" BaseImage="null"/>
      <Size Name="TileSize" Size="270,51"/>
      <Inset Name="LabelMargins" Inset="36, 6, 8, 0"/>
      <cor:Boolean Name="AllowPressedEffect" Boolean="false"/>
      <AccessibleRole Name="AccessibilityRole" AccessibleRole="ListItem"/>
      <Font Name="Font" FontName="global://comm:RegularFontFace" FontSize="22"/>
      <Font Name="FocusFont" FontName="global://comm:MainFontFace" FontSize="22"/>
      <Color Name="NoFocusColor" Color="color://comm:GuideMediumBlue"/>
      <cor:Boolean Name="InvokeOnSingleTap" Boolean="false"/>
      <draw:BaseImage Name="IconImage" BaseImage="res://ehres!Browse.Cmd.Search.Dormant.png"/>
      <draw:BaseImage Name="FocusIconImage" BaseImage="res://ehres!Browse.Cmd.Search.png"/>
      <DockLayoutInput Name="IconBorderInput" Position="Right" Alignment="Center"/>
      <Size Name="IconMinSize" Size="39,32"/>
      <Inset Name="IconPadding" Inset="0,0,20,0"/>
    </Properties>
    <Locals>
      <Environment Name="Environment"/>
      <KeyHandler Name="KeyRight" Key="Right"/>
      <Timer Name="FilterTimer" AutoRepeat="false" Interval="200" Enabled="true"/>
      <cor:Boolean Name="InvokedByRightKey"/>
    </Locals>
    <Rules>
      <Binding Source="[ActionCommand.Description]" Target="[Label.Content]"/>
      <Binding Source="[ActionCommand.Description]" Target="[Accessible.Name]"/>
      <Binding Target="[HideFocusState]" Source="[ListPanning.Value]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true">
        <Conditions>
          <Equality Source="[ListPanning.Value]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[LabelPanel.Margins]" Value="[FocusLabelMargins]"/>
          <Invoke Target="[FilterTimer.Start]"/>
        </Actions>
      </Condition>
      <Condition Source="[Input.KeyFocus]" SourceValue="false">
        <Actions>
          <Invoke Target="[FilterTimer.Stop]"/>
        </Actions>
      </Condition>
      <Changed Source="[FilterTimer.Tick]">
        <Conditions>
          <IsType Source="[ActionCommand]" Type="video:EpgFilterCommand"/>
        </Conditions>
        <Actions>
          <Invoke Target="[Table!video:EpgTable.Filter]" filter="[ActionCommand!video:EpgFilterCommand.Filter]"/>
        </Actions>
      </Changed>
      <Rule>
        <Conditions>
          <IsType Source="[ActionCommand]" Type="video:EpgFilterCommand"/>
        </Conditions>
        <Actions>
          <Set Target="[ShowIcon]" Value="false"/>
        </Actions>
      </Rule>
      <Changed Source="[KeyRight.Invoked]">
        <Actions>
          <Invoke Target="[Model.Invoke]" InvokePolicy="AsynchronousLowPri"/>
          <Set Target="[InvokedByRightKey]" Value="true"/>
        </Actions>
      </Changed>
      <Changed Source="[Model.Invoked]">
        <Conditions>
          <Equality Source="[Input.KeyFocus]" ConditionOp="Equals" Value="true"/>
          <IsType Source="[ActionCommand]" Type="video:NavigationCommand"/>
          <Equality Source="[InvokedByRightKey]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[ActionCommand.Invoke]" InvokePolicy="AsynchronousNormal"/>
        </Actions>
      </Changed>
      <Changed Source="[Model.Invoked]">
        <Conditions>
          <Equality Source="[InvokedByRightKey]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[InvokedByRightKey]" Value="false"/>
        </Actions>
      </Changed>
      <Condition Source="[Environment.IsRightToLeft]" SourceValue="true">
        <Actions>
          <Set Target="[KeyRight.Key]" Value="Left"/>
        </Actions>
      </Condition>
    </Rules>
  </UI>
</Mcml>
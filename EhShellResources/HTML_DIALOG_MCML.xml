<Mcml xmlns="http://schemas.microsoft.com/2006/mcml" 
      xmlns:cor ="assembly://MsCorLib/System" 
      xmlns:lib ="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.Shell" 
      xmlns:draw="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.UI.Drawing" 
      xmlns:shell="assembly://Microsoft.MediaCenter.Shell/Microsoft.MediaCenter.Shell" 
      xmlns:ctl="res://Microsoft.MediaCenter.Shell!Controls.mcml" 
      xmlns:comm="res://Microsoft.MediaCenter.Shell!Globals.mcml" 
      xmlns:me="Me">
  
  <FlowLayout Name="DefaultLayout" Orientation="Horizontal" FillStrip="true" StripAlignment="Far" ItemAlignment="Center" AllowWrap="true" Spacing="9,0"/>
  <UI Name="Dialog" Code="ListView" Behavior="shell:MenuControl">
    <Properties>
      <ILayout Name="ButtonLayout" ILayout="global://me:DefaultLayout"/>
      <shell:DialogData Name="MenuData" DialogData="$Required"/>
      <shell:ImageSet Name="OverlaysButtonNoFocus" ImageSet="global://comm:Overlays.Button.NoFocus"/>
      <Size Name="SmallDialogSize" Size="509, 0"/>
      <Size Name="SmallDialogContentSize" Size="0, 262"/>
      <Size Name="MediumDialogSize" Size="768, 0"/>
      <Size Name="MediumDialogContentSize" Size="0, 165"/>
      <Size Name="LargeDialogSize" Size="0, 0"/>
      <Size Name="LargeDialogContentSize" Size="0, 165"/>
    </Properties>
    <Locals>
      <cor:String Name="DialogSize" String="Small"/>
      <Environment Name="Environment"/>
    </Locals>
    <Rules>
      <Binding Target="[Accessible.IsFocusable]" Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]" Source="[Input.KeyFocus]"/>
      <Default Target="[Accessible.Name]" Value="[MenuData.Title]"/>
      <Default Target="[Accessible.Value]" Value="[MenuData.Message]">
        <Actions>
          <Invoke Target="[Accessible.SimulateFocus]" InvokePolicy="Synchronous"/>
        </Actions>
      </Default>
      <Default Target="[Accessible.Role]" Value="Dialog"/>
      <Default Target="[Accessible.DefaultAction]" Value="[MenuData.AccessiblityDefaultAction]"/>
      <Default Target="[Input.Model]" Value="[MenuData]"/>
      <Rule>
        <Conditions>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[MainImage.DetachAnimation]" type="Show" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[MainImage.DetachAnimation]" type="Hide" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[Icon.DetachAnimation]" type="Show" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[ContentArea.DetachAnimation]" type="Show" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        </Actions>
      </Rule>
      <Condition Source="[DialogSize]" SourceValue="Large">
        <Actions>
          <Set Target="[ContentArea.MaximumSize]" Value="[LargeDialogSize]"/>
          <Set Target="[Content.HACK_ContentMaximumSize]" Value="[LargeDialogContentSize]"/>
        </Actions>
      </Condition>
      <Condition Source="[DialogSize]" SourceValue="Medium">
        <Actions>
          <Set Target="[ContentArea.MaximumSize]" Value="[MediumDialogSize]"/>
          <Set Target="[Content.HACK_ContentMaximumSize]" Value="[MediumDialogContentSize]"/>
        </Actions>
      </Condition>
      <Condition Source="[DialogSize]" SourceValue="Small">
        <Actions>
          <Set Target="[ContentArea.MaximumSize]" Value="[SmallDialogSize]"/>
          <Set Target="[Content.HACK_ContentMaximumSize]" Value="[SmallDialogContentSize]"/>
        </Actions>
      </Condition>
      <Condition Source="[MenuData.Items.Count]" ConditionOp="GreaterThan" SourceValue="3" Target="[DialogSize]" Value="Large"/>
      <Condition Source="[MenuData.Title.Length]" ConditionOp="GreaterThan" SourceValue="25" Target="[DialogSize]" Value="Medium"/>
      <Condition Source="[MenuData.Items.Count]" ConditionOp="GreaterThan" SourceValue="2" Target="[DialogSize]" Value="Medium"/>
      <Default Target="[DialogSize]" Value="Small"/>
      <Binding Source="[MenuData.ShowCheckBox]" Target="[CheckBox.Visible]"/>
      <Binding Source="[MenuData.MessageViewType]" Target="[Content.Source]"/>
      <Binding Source="[MenuData.Icon]" Target="[Icon.Image]"/>
      <Binding Source="[MenuData.Items]" Target="[Buttons.Source]"/>
      <Binding Source="[MenuData.Title]" Target="[Title.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
    </Rules>
    <Content>
      <Graphic Name="MainImage" Image="metaimage://comm:Overlays.Outline" SizingPolicy="SizeToChildren" Padding="5, 5, 5, 5" Navigation="ContainDirectional, WrapTabOrder">
        <Animations>
          <Animation Animation="animation://comm:Menu.Horizontal.Show"/>
          <Animation Animation="animation://comm:Menu.Hide"/>
        </Animations>
        <Children>
          <Graphic Image="metaimage://comm:Overlays.Background.Medium" Padding="10, 12, 10, 10" SizingPolicy="SizeToChildren">
            <Layout>
              <LegacyHorizontalFlowLayout ItemAlignment="Center"/>
            </Layout>
            <Children>
              <Graphic Name="Icon" Margins="0, 0, 10, 0" MaintainAspectRatio="true" MaximumSize="180, 180">
                <Animations>
                  <Animation Animation="animation://comm:MenuContent.Show"/>
                </Animations>
              </Graphic>
              <Panel Name="ContentArea">
                <Layout>
                  <LegacyVerticalFlowLayout ItemAlignment="Fill" />
                </Layout>
                <Animations>
                  <Animation Animation="animation://comm:MenuContent.Show"/>
                </Animations>
                <Children>
                  <FancyText Name="Title" Font="font://comm:DialogTitle" Color="color://comm:DarkBlue" MaximumLines="2" WordWrap="true" Margins="0, 0, 0, 2">
                    <LayoutInput>
                      <CenterLayoutInput Position="Left"/>
                    </LayoutInput>
                  </FancyText>
                  <me:DialogContent Name="Content" MenuData="[MenuData]" Margins="0, 0, 0, 10"/>
                  <me:DialogCheckbox Name="CheckBox" Model="[MenuData.CheckBox]" Padding="0, 7, 0, 7"/>
                  <Panel Navigation="Group" Padding="0, 3, 0, 0">
                    <Children>
                      <Repeater Name="Buttons" Layout="[ButtonLayout]">
                        <Content>
                          <me:DialogButton Model="[RepeatedItem!Command]" />
                        </Content>
                      </Repeater>
                    </Children>
                  </Panel>
                </Children>
              </Panel>
            </Children>
          </Graphic>
        </Children>
      </Graphic>
    </Content>
  </UI>
  <UI Name="DialogButton" >
    <Properties>
      <ICommand Name="Model" ICommand="$Required"/>
      <shell:ImageSet Name="OverlaysButtonNoFocus" ImageSet="global://comm:Overlays.Button.NoFocus"/>
    </Properties>
    <Locals>
      <Environment Name="Environment"/>
    </Locals>
    <Rules>
      <Binding Source="[Model]" Target="[DialogButtonCtl.Model]" />
      <Rule>
        <Conditions>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DialogButtonCtl.DetachAnimation]" type="Show" ExclusiveApply="false" InvokePolicy="Synchronous"/>
          <Invoke Target="[DialogButtonCtl.DetachAnimation]" type="Hide" ExclusiveApply="false" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <ctl:Button Name="DialogButtonCtl" Model="[Model]" NoFocusImage="[OverlaysButtonNoFocus.Values.#Default!Image]" DisabledImage="null" NoFocusColor="color://comm:OffWhite50Percent">
        <Animations>
          <Animation Animation="animation://comm:MenuItem.Horizontal.Show"/>
          <Animation Animation="animation://comm:MenuItem.Hide"/>
        </Animations>
        <LabelBorderInput>
          <DockLayoutInput Position="Client" Alignment="Center"/>
        </LabelBorderInput>
      </ctl:Button>
    </Content>
  </UI>
  <UI Name="DialogContent">
    <Properties>
      <shell:DialogData Name="MenuData" DialogData="$Required"/>
      <Size Name="HACK_ContentMaximumSize"/>
    </Properties>
    <Rules>
      <Default Target="[Accessible.Name]" Value="[MenuData.Message]"/>
      <Default Target="[Accessible.Role]" Value="StaticText"/>
      <Binding Source="[HACK_ContentMaximumSize]" Target="[Message.MaximumSize]"/>
      <Binding Source="[MenuData.Message]" Target="[Message.Content]"/>
    </Rules>
    <Content>
      <FancyText Name="Message" Font="font://comm:DialogContent" Color="color://comm:OffWhite" WordWrap="true" MaximumLines="7"/>
    </Content>
  </UI>
  <UI Name="DialogCheckbox" BaseUI="ctl:CheckBox">
    <Properties>
      <Color Name="NoFocusColor" Color="color://comm:OffWhite50Percent"/>
      <draw:BaseImage Name="CheckedNoFocusImage" BaseImage="res://ehres!Overlays.CheckBox.Select.NoFocus.png"/>
      <draw:BaseImage Name="CheckedFocusImage" BaseImage="res://ehres!GlobalSettings.Tile.Select.Focus.png"/>
      <draw:BaseImage Name="NoFocusImage" BaseImage="res://ehres!Overlays.CheckBox.NoFocus.png"/>
      <draw:BaseImage Name="FocusImage" BaseImage="res://ehres!GlobalSettings.Tile.Focus.png"/>
    </Properties>
  </UI>
  <UI Name="DialogHost">
    <Properties>
      <shell:DialogData Name="MenuData" DialogData="$Required"/>
    </Properties>
    <Content>
      <Panel Layout="Dock" Padding="30, 34, 58, 58">
        <Children>
          <me:Dialog Name="Container" MenuData="[MenuData]">
            <LayoutInput>
              <DockLayoutInput Position="Bottom" Alignment="Far"/>
            </LayoutInput>
          </me:Dialog>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="AutoScanDialogHost" Code="ListView" Behavior="shell:MenuControl">
    <Properties>
      <shell:DialogData Name="MenuData" DialogData="$Required" />
    </Properties>
    <Locals>
      <Environment Name="Environment"/>
    </Locals>
    <Rules>
      <Binding Target="[Accessible.IsFocusable]" Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]" Source="[Input.KeyFocus]"/>
      <Default Target="[Accessible.Name]" Value="[MenuData.Title]"/>
      <Default Target="[Accessible.Role]" Value="Dialog"/>
      <Default Target="[Input.Model]" Value="[MenuData]"/>
      <Binding Source="[MenuData.Title]" Target="[Title.Content]">
        <Transformer>
          <FormatTransformer ToUpper="true"/>
        </Transformer>
      </Binding>
      <Binding Source="[MenuData.MessageViewType]" Target="[Content.Source]"/>
      <Binding Source="[MenuData.Items]" Target="[Buttons.Source]"/>
      <Binding Source="[MenuData.Icon]" Target="[Icon.Image]"/>
      <Rule>
        <Conditions>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[MainImage.DetachAnimation]" type="Show" InvokePolicy="Synchronous" ExclusiveApply="false"/>
          <Invoke Target="[MainImage.DetachAnimation]" type="Hide" InvokePolicy="Synchronous" ExclusiveApply="false"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <Panel Layout="Dock">
        <Children>
          <Graphic Name="MainImage" Image="metaimage://comm:Overlays.Outline" Padding="5,5,5,5" SizingPolicy="SizeToChildren">
            <LayoutInput>
              <DockLayoutInput Position="Client" Alignment="Center"/>
            </LayoutInput>
            <Animation>animation://comm:Menu.Horizontal.Show</Animation>
            <Animation>animation://comm:Menu.Hide</Animation>
            <Navigation>ContainDirectional, WrapTabOrder</Navigation>
            <Children>
              <Graphic Image="metaimage://comm:Overlays.Background.Medium" Padding="21, 21, 21, 21" SizingPolicy="SizeToChildren">
                <Children>
                  <Panel Layout="VerticalFlow">
                    <Children>
                      <Panel MaximumSize="0,95">
                        <Layout>
                          <LegacyHorizontalFlowLayout ItemAlignment="Center"/>
                        </Layout>
                        <Children>
                          <Graphic Name="Icon" Margins="0,0,40,0" />
                          <FancyText Name="Title" WordWrap="true" MaximumLines="2" Font="font://comm:DialogTitle" Color="color://comm:DarkBlue" />
                        </Children>
                      </Panel>
                      <me:DialogContent Name="Content" MenuData="[MenuData]" Margins="0, 20, 0, 0" />
                      <Repeater Name="Buttons" Layout="VerticalFlow">
                        <Content>
                          <me:DialogButtonVertical Model="[RepeatedItem!Command]" />
                        </Content>
                      </Repeater>
                    </Children>
                  </Panel>
                </Children>
              </Graphic>
            </Children>
          </Graphic>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="DialogButtonVertical" >
    <Properties>
      <ICommand Name="Model" ICommand="$Required"/>
    </Properties>
    <Locals>
      <Environment Name="Environment"/>
    </Locals>
    <Rules>
      <Binding Source="[Model]" Target="[DialogButtonCtlVert.Model]" />
      <Rule>
        <Conditions>
          <Equality Source="[Environment.Is2DAnimationExperience]" Value="true"/>
        </Conditions>
        <Actions>
          <Invoke Target="[DialogButtonCtlVert.DetachAnimation]" type="Show" ExclusiveApply="false" InvokePolicy="Synchronous"/>
          <Invoke Target="[DialogButtonCtlVert.DetachAnimation]" type="Hide" ExclusiveApply="false" InvokePolicy="Synchronous"/>
        </Actions>
      </Rule>
    </Rules>
    <Content>
      <ctl:Button Name="DialogButtonCtlVert" Model="[Model]" NoFocusImage="null" DisabledImage="null" NoFocusColor="color://comm:OffWhite" AccessibilityRole="MenuItem" TileSize="675,51">
        <Animations>
          <Animation Animation="animation://comm:MenuItem.Show"/>
          <Animation Animation="animation://comm:MenuItem.Hide"/>
        </Animations>
      </ctl:Button>
    </Content>
  </UI>
</Mcml>
<?xml version="1.0" encoding="utf-8" ?>
<Mcml xmlns ="http://schemas.microsoft.com/2006/mcml"
      xmlns:cor ="assembly://MsCorLib/System"
      xmlns:draw ="assembly://Microsoft.MediaCenter.UI/Microsoft.MediaCenter.UI.Drawing"
      xmlns:shell="assembly://Microsoft.MediaCenter.Shell/Microsoft.MediaCenter.Shell"
      xmlns:comm ="res://Globals.mcml" xmlns:me ="Me">
  
  <MergeAnimation Name="PressedLabelHighlight">
    <Sources>
      <TransformByAttributeAnimation Attribute="Width" Magnitude="1.0">
        <Source>
          <Animation DebugID="PressedLabelHighlight.Source" Type="Idle">
            <Keyframes>
              <GradientOffsetKeyframe Time="0.00" Value="-1.0" RelativeTo="Absolute"/>
              <GradientOffsetKeyframe Time="0.10" Value="0.00" RelativeTo="Absolute"/>
              <GradientOffsetKeyframe Time="0.18" Value="0.35" RelativeTo="Absolute"/>
              <GradientOffsetKeyframe Time="0.35" Value="0.55" RelativeTo="Absolute"/>
              <GradientOffsetKeyframe Time="0.60" Value="1.25" RelativeTo="Absolute"/>
              <GradientOffsetKeyframe Time="0.70" Value="1.25" RelativeTo="Absolute"/>
            </Keyframes>
          </Animation>
        </Source>
      </TransformByAttributeAnimation>
      <Animation>
        <Keyframes>
          <GradientColorMaskKeyframe Time="0.00" Value="0, 0, 0, 0" RelativeTo="Absolute"/>
          <GradientColorMaskKeyframe Time="0.05" Value="0, 255, 255, 255" RelativeTo="Absolute"/>
          <GradientColorMaskKeyframe Time="0.55" Value="0, 255, 255, 255" RelativeTo="Absolute"/>
          <GradientColorMaskKeyframe Time="0.70" Value="0, 0, 0, 0" RelativeTo="Absolute"/>
        </Keyframes>
      </Animation>
    </Sources>
  </MergeAnimation>
  <UI Name="Button" BaseUI="me:ButtonBase">
    <Properties>
      <ICommand Name="Model" ICommand="$Required"/>
      <ISelectionPolicy Name="SelectionPolicy" ISelectionPolicy="null"/>
      <cor:String Name="AccessibilityName" String="null"/>
      <cor:String Name="AccessibilityDesc" String="null"/>
      <cor:Boolean Name="KeyInteractive" Boolean="true" />
      <AccessibleRole Name="AccessibilityRole" AccessibleRole="PushButton"/>
    </Properties>
    <Rules>
      <Binding Target="[Accessible.IsUnavailable]" Source="[Model.Available]" >
        <Transformer>
          <BooleanTransformer Inverse="true"/>
        </Transformer>
      </Binding>
      <Binding Target="[Accessible.IsPressed]" Source="[Clicker.Clicking]"/>
      <Binding Target="[Accessible.IsFocusable]" Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]" Source="[Input.KeyFocus]"/>
      <Binding Target="[Accessible.Description]" Source="[AccessibilityDesc]"/>
      <Default Target="[Accessible.DefaultActionCommand]" Value="[Model]"/>
      <Default Target="[Accessible.DefaultAction]" Value="res://ehres!Acc_DefaultAction_Button"/>
      <Default Target="[Accessible.Role]" Value="[AccessibilityRole]"/>
      <Binding Target="[Input.KeyInteractive]" Source="[KeyInteractive]" />
      <Binding Target="[Input.FocusModel]" Source="[Model!ISelectable]"/>
      <Binding Source="[Model.Available]" Target="[Input.Enabled]"/>
      <Rule >
        <Conditions>
          <Equality Source="[AccessibilityName]" Value="null"/>
          <Modified Source="[Model.Description]" InitialTransitionEvaluate="true"/>
        </Conditions>
        <Actions>
          <Set Target="[Accessible.Name]" Value="[Model.Description]"/>
        </Actions>
      </Rule>
      <Default Target="[Accessible.Name]" Value="[AccessibilityName]"/>
      <Rule>
        <Conditions>
          <IsType Source="[Model]" Type="shell:IThumbnailCommand"/>
          <IsValid Source="[Model!shell:IThumbnailCommand.Image.DefaultImage]"/>
        </Conditions>
        <Actions>
          <Set Value="[Model!shell:IThumbnailCommand.Image.DefaultImage]" Target="[IconImage]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <IsValid Source="[SelectionPolicy]"/>
        </Conditions>
        <Actions>
          <Set Value="[SelectionPolicy]" Target="[Model!ISelectable.SelectionPolicy]"/>
        </Actions>
      </Rule>
      <Binding Source="[Model.Description]" Target="[Label.Content]"/>
      <Rule>
        <Conditions>
          <Modified Source="[Clicker.Invoked]"/>
          <Equality Source="[IsSelectable]" Value="true" />
        </Conditions>
        <Actions>
          <Invoke Target="[Model.Invoke]" InvokePolicy="AsynchronousLowPri"/>
        </Actions>
      </Rule>
    </Rules>
  </UI>
  <UI Name="ButtonBase">
    <Properties>
      <Font Name="Font" Font="font://comm:ButtonText"/>
      <Font Name="FocusFont" Font="null"/>
      <Font Name="DisabledFont" Font="null"/>
      <cor:Boolean Name="ShowLabel" Boolean="true"/>
      <cor:Boolean Name="AllowPressedEffect" Boolean="true"/>
      <cor:Boolean Name="AllowMarquee" Boolean="true"/>
      <Size Name="TileSize" Size="250, 51"/>
      <cor:Boolean Name="ShowLabelBackground" Boolean="false"/>
      <draw:BaseImage Name="LabelBackground" BaseImage="null"/>
      <draw:BaseImage Name="LabelBackgroundFocus" BaseImage="null"/>
      <draw:BaseImage Name="NoFocusImage" BaseImage="metaimage://comm:Common.Button.Left.NoFocus"/>
      <draw:BaseImage Name="FocusImage" BaseImage="metaimage://comm:Common.Button.Left.Focus"/>
      <draw:BaseImage Name="DisabledImage" BaseImage="metaimage://comm:Common.Button.Left.Disabled"/>
      <draw:BaseImage Name="FocusOverlayImage" BaseImage="res://ehres!Common.Button.Left.FocusOverlay.png"/>
      <draw:BaseImage Name="PressedImage" BaseImage="res://ehres!Common.Button.PressedHighlight.png"/>
      <Color Name="NoFocusColor" Color="color://comm:LightBlue"/>
      <Color Name="FocusColor" Color="color://comm:OffWhite"/>
      <Color Name="DisabledColor" Color="color://comm:LightBlue40Percent"/>
      <Color Name="NoFocusFillColor" Color="color://comm:Transparent"/>
      <Color Name="FocusFillColor" Color="color://comm:Transparent"/>
      <Color Name="DisabledFillColor" Color="color://comm:Transparent"/>
      <Inset Name="LabelMargins" Inset="global://comm:StandardButtonTextMargins"/>
      <DockLayoutInput Name="LabelBorderInput" Position="Left" Alignment="Center"/>
      <AnchorLayoutInput Name="LabelBackgroundLayoutInput" Left="PressedGradient,0,-8" Top="PressedGradient,0,-4" Right="PressedGradient,1,8" Bottom="PressedGradient,1,4" ContributesToWidth="false" ContributesToHeight="false"/>
      <cor:Boolean Name="HideFocusState" Boolean="false"/>
      <cor:Boolean Name="ShowIcon" Boolean="true"/>
      <draw:BaseImage Name="IconImage" BaseImage="null"/>
      <draw:BaseImage Name="FocusIconImage" BaseImage="null"/>
      <Image Name="IconAcquiringImage" Image="null"/>
      <Image Name="IconErrorImage" Image="null"/>
      <Size Name="IconMinSize"/>
      <Size Name="IconMaxSize"/>
      <Inset Name="IconPadding"/>
      <DockLayoutInput Name="IconBorderInput" Position="Left" Alignment="Center"/>
      <cor:String Name="FocusLoopContentTemplate" String="null"/>
      <cor:Boolean Name="IsNavigatingCommand" Boolean="true"/>
      <shell:ImageSet Name="LabelBackgroundImageSet" ImageSet="global://comm:Button.Label.Background"/>
      <Sound Name="DefaultNavigationSound" Sound="res://ehres!Select_a.wav" />
      <Sound Name="DefaultNonNavigationSound" Sound="res://ehres!MiniSelect_a.wav" />
      <cor:Boolean Name="InvokeOnSingleTap" Boolean="true"/>
    </Properties>
    <Locals>
      <ClickHandler Name="Clicker"/>
      <cor:Boolean Name="IsSelectable" Boolean="false"/>
      <Timer Name="IsSelectableTimer" Interval="50" AutoRepeat="false" Enabled="false" />
    </Locals>
    <Rules>
      <Binding Target="[Accessible.IsFocusable]" Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]" Source="[Input.KeyFocus]"/>
      <Rule>
        <Conditions>
          <Equality Source="[InvokeOnSingleTap]" Value="true"/>
        </Conditions>
        <Actions>
          <Set Target="[IsSelectable]" Value="true"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[Clicker.Invoked]"/>
          <Equality Source="[IsNavigatingCommand]" Value="true"/>
          <Equality Source="[IsSelectable]" Value="true" />
        </Conditions>
        <Actions>
          <PlaySound Sound="[DefaultNavigationSound]" />
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[Clicker.Invoked]"/>
          <Equality Source="[IsNavigatingCommand]" Value="false"/>
          <Equality Source="[IsSelectable]" Value="true" />
        </Conditions>
        <Actions>
          <PlaySound Sound="[DefaultNonNavigationSound]" />
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[AllowPressedEffect]" Value="true"/>
          <Equality Source="[Clicker.Clicking]" ConditionOp="ChangedTo" Value="true"/>
        </Conditions>
        <Actions>
          <PlayAnimation Target="[PressedGradient]" Animation="global://me:PressedLabelHighlight"/>
        </Actions>
      </Rule>
      <Condition Source="[Input.Enabled]" SourceValue="false" Target="[Label.Color]" Value="[DisabledColor]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Label.Color]" Value="[FocusColor]">
        <Conditions>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
      </Condition>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
          <Equality Source="[FocusLoopContentTemplate]" ConditionOp="NotEquals" Value="null"/>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[IconFocusLoopHost.Visible]" Value="true"/>
          <Set Target="[IconFocusLoopHost.Source]" Value="[FocusLoopContentTemplate]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
          <Equality Source="[FocusIconImage]" ConditionOp="NotEquals" Value="null"/>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[Icon.Image]" Value="[FocusIconImage]"/>
        </Actions>
      </Rule>
      <Binding Source="[IconErrorImage]" Target="[Icon.ErrorImage]"/>
      <Binding Source="[IconAcquiringImage]" Target="[Icon.AcquiringImage]"/>
      <Binding Source="[IconImage]" Target="[Icon.Image]"/>
      <Default Target="[Icon.Image]" Value="[IconImage]"/>
      <Binding Source="[ShowIcon]" Target="[Icon.Visible]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[LabelBackgroundGraphic.Image]" Value="[LabelBackgroundFocus]">
        <Conditions>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
      </Condition>
      <Rule>
        <Conditions>
          <Equality Source="[Input.Enabled]" Value="false"/>
          <Equality Source="[DisabledFont]" ConditionOp="NotEquals" Value="null"/>
        </Conditions>
        <Actions>
          <Set Target="[Label.Font]" Value="[DisabledFont]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true"/>
          <Equality Source="[FocusFont]" ConditionOp="NotEquals" Value="null"/>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[Label.Font]" Value="[FocusFont]"/>
        </Actions>
      </Rule>
      <Condition Source="[Input.Enabled]" SourceValue="false" Target="[Background.Image]" Value="[DisabledImage]"/>
      <Condition Source="[Input.KeyFocus]" SourceValue="true" Target="[Background.Image]" Value="[FocusImage]">
        <Conditions>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
      </Condition>
      <Condition Source="[Input.Enabled]" SourceValue="false" Target="[Fill.Content]" Value="[DisabledFillColor]"/>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" ConditionOp="ChangedTo" Value="true"/>
          <Equality Source="[HideFocusState]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[FocusOverlay.Visible]" Value="true"/>
          <Set Target="[Fill.Content]" Value="[FocusFillColor]"/>
          <PlaySound Sound="res://ehres!Focus_a.wav" />
        </Actions>
      </Rule>
      <Default Target="[FocusOverlay.Visible]" Value="false"/>
      <Binding Source="[Clicker.Clicking]" Target="[Highlight.Visible]"/>
      <Rule>
        <Conditions>
          <Equality Source="[AllowMarquee]" Value="true"/>
          <Modified Source="[Input.KeyFocus]"/>
        </Conditions>
        <Actions>
          <Set Target="[Label.AllowMarquee]" Value="[Input.KeyFocus]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Equality Source="[Input.KeyFocus]" Value="true" ConditionOp="ChangedTo"/>
          <Equality Source="[InvokeOnSingleTap]" Value="false"/>
        </Conditions>
        <Actions>
          <Invoke Target="[IsSelectableTimer.Start]"/>
        </Actions>
      </Rule>
      <Rule>
        <Conditions>
          <Modified Source="[IsSelectableTimer.Tick]"/>
        </Conditions>
        <Actions>
          <Set Target="[IsSelectable]" Value="true"/>
        </Actions>
      </Rule>
      <Condition Source="[Input.KeyFocus]" ConditionOp="ChangedTo" SourceValue="false">
        <Conditions>
          <Equality Source="[InvokeOnSingleTap]" Value="false"/>
        </Conditions>
        <Actions>
          <Set Target="[IsSelectable]" Value="false"/>
        </Actions>
      </Condition>
      <Binding Source="[TileSize]" Target="[Root.MaximumSize]"/>
      <Binding Source="[TileSize]" Target="[Fill.MinimumSize]"/>
      <Binding Source="[TileSize]" Target="[Background.MinimumSize]"/>
      <Default Target="[LabelBackgroundFocus]" Value="[LabelBackgroundImageSet.Values.#Focus!Image]" />
      <Default Target="[LabelBackground]" Value="[LabelBackgroundImageSet.Values.#Default!Image]" />
    </Rules>
    <Content>
      <Panel Name="Root" MouseInteractive="true">
        <Layout>
          <StageLayout/>
        </Layout>
        <Children>
          <Panel Name="LabelScalePanel" Layout="Dock">
            <Children>
              <Graphic Name="Icon" LayoutInput="[IconBorderInput]" Margins="[IconPadding]" MaintainAspectRatio="true" MinimumSize="[IconMinSize]" MaximumSize="[IconMaxSize]" Visible="[ShowIcon]">
                <Children>
                  <me:BaseIconFocusLoopContent Name="IconFocusLoopHost" Visible="false" Source="null"/>
                </Children>
              </Graphic>
              <Panel Name="LabelPanel" Layout="Anchor" LayoutInput="[LabelBorderInput]" Margins="[LabelMargins]" Visible="[ShowLabel]">
                <Children>
                  <Gradient Name="PressedGradient" Orientation="Horizontal" ColorMask="0, 0, 0, 0">
                    <LayoutInput>
                      <AnchorLayoutInput Vertical="center" Horizontal="near"/>
                    </LayoutInput>
                    <Ramp>
                      <RampValue Value="1" Position="-20" Relative="GadgetMin"/>
                      <RampValue Value="0" Position="20" Relative="GadgetMin"/>
                      <RampValue Value="0" Position="-20" Relative="GadgetMax"/>
                      <RampValue Value="1" Position="20" Relative="GadgetMax"/>
                    </Ramp>
                    <Children>
                      <FancyText Name="Label" Color="[NoFocusColor]" Font="[Font]"/>
                    </Children>
                  </Gradient>
                  <Graphic Name="LabelBackgroundGraphic" Image="[LabelBackground]" Visible="[ShowLabelBackground]" LayoutInput="[LabelBackgroundLayoutInput]" />
                </Children>
              </Panel>
            </Children>
          </Panel>
          <Clip FadeSize="20" Layout="LegacyFill">
            <Children>
              <Graphic Name="Highlight" Image="[PressedImage]">
                <Animations>
                  <IAnimationProvider IAnimationProvider="global://comm:Button.PressedHighlight.Show"/>
                  <IAnimationProvider IAnimationProvider="global://comm:Button.PressedHighlight.Hide"/>
                </Animations>
              </Graphic>
            </Children>
          </Clip>
          <Graphic Name="FocusOverlay" Layout="LegacyFill" Image="[FocusOverlayImage]">
            <Animations>
              <Animation Animation="animation://comm:Button.FocusOverlay.Idle"/>
            </Animations>
          </Graphic>
          <ColorFill Name="Fill" Layout="LegacyFill" Content="[NoFocusFillColor]"/>
          <Graphic Name="Background" Layout="LegacyFill" Image="[NoFocusImage]">
            <LayoutInput>
              <StageLayoutInput Stage="Primary"/>
            </LayoutInput>
          </Graphic>
        </Children>
      </Panel>
    </Content>
  </UI>
  <UI Name="BaseIconFocusLoopContent"></UI>
</Mcml>

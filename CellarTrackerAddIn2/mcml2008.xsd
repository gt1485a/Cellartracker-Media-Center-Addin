<?xml version="1.0" encoding="utf-8"?>
<schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2008/mcml"
    xmlns="http://www.w3.org/2001/XMLSchema"
    xmlns:mcml="http://schemas.microsoft.com/2008/mcml">

  <simpleType name="ICommand-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ICommand-e">
    <annotation><documentation>Base command functionality interface.</documentation></annotation>
    <attribute name="Available" use="optional">
      <annotation><documentation>Command availability.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="ICommand" type="mcml:ICommand-i" use="optional">
      <annotation><documentation>ICommand inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="AccessibleRole-i">
    <restriction base="string">
      <enumeration value="Alert">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Animation">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Application">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Border">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ButtonDropDown">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ButtonDropDownGrid">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ButtonMenu">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Caret">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Cell">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Character">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Chart">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="CheckButton">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Client">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Clock">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Column">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ColumnHeader">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ComboBox">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Cursor">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Diagram">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Dial">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Dialog">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Document">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="DropList">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Equation">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Graphic">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Grip">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Grouping">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="HelpBalloon">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="HotkeyField">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Indicator">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="IPAddress">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Link">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="List">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ListItem">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="MenuBar">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="MenuItem">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="MenuPopup">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Outline">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OutlineButton">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OutlineItem">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PageTab">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PageTabList">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Pane">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ProgressBar">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PropertyPage">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PushButton">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="RadioButton">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Row">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="RowHeader">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ScrollBar">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Separator">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Slider">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Sound">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="SpinButton">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="SplitButton">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="StaticText">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="StatusBar">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Table">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Text">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="TitleBar">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ToolBar">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ToolTip">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Whitespace">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Window">
        <annotation><documentation></documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Accessible-e">
    <annotation><documentation>Accessibility binding object available in all UI markups.</documentation></annotation>
    <attribute name="Description" use="optional">
      <annotation><documentation>Description.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="UniqueId" use="optional">
      <annotation><documentation>UniqueId (for reference).</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="DefaultAction" use="optional">
      <annotation><documentation>Default action description.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="DefaultActionCommand" type="mcml:ICommand-i" use="optional">
      <annotation><documentation>Command to invoke for default action.</documentation></annotation>
    </attribute>
    <attribute name="Help" use="optional">
      <annotation><documentation>Help text.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="HelpTopic" use="optional">
      <annotation><documentation>Help topic.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="KeyboardShortcut" use="optional">
      <annotation><documentation>Keyboard shortcut.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Name" use="optional">
      <annotation><documentation>Name.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Role" type="mcml:AccessibleRole-i" use="optional">
      <annotation><documentation>Accessibility role.</documentation></annotation>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>Value.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="IsUnavailable" use="optional">
      <annotation><documentation>Availability.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsSelected" use="optional">
      <annotation><documentation>Is selected.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsFocused" use="optional">
      <annotation><documentation>Is focused.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsPressed" use="optional">
      <annotation><documentation>Is pressed.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsChecked" use="optional">
      <annotation><documentation>Is checked.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsHotTracked" use="optional">
      <annotation><documentation>Is hot tracked.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsDefault" use="optional">
      <annotation><documentation>Is default.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsExpanded" use="optional">
      <annotation><documentation>Is expanded.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsMarquee" use="optional">
      <annotation><documentation>Is marqueed.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsInvisible" use="optional">
      <annotation><documentation>Is invisible.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsOffScreen" use="optional">
      <annotation><documentation>Is offscreen.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsFocusable" use="optional">
      <annotation><documentation>Is focusable.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsSelectable" use="optional">
      <annotation><documentation>Is selectable.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="IsProtected" use="optional">
      <annotation><documentation>Is protected.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="HasPopup" use="optional">
      <annotation><documentation>Has popup.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="Aggregate-e">
    <annotation><documentation>Imports an MCML resource and surfaces its markup types and resources through the containing MCML.</documentation></annotation>
    <attribute name="Source" use="optional">
      <annotation><documentation>URI of the MCML resource to import.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="KeyframeValueReference-i">
    <restriction base="string">
      <enumeration value="Absolute">
        <annotation><documentation>Value is absolute.</documentation></annotation>
      </enumeration>
      <enumeration value="Current">
        <annotation><documentation>Value is an offset from the current "in-progress" value.</documentation></annotation>
      </enumeration>
      <enumeration value="Final">
        <annotation><documentation>Value is an offset from the final end value.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="InterpolationType-i">
    <restriction base="string">
      <enumeration value="Bezier">
        <annotation><documentation>Bezier.</documentation></annotation>
      </enumeration>
      <enumeration value="Cosine">
        <annotation><documentation>Cosine.</documentation></annotation>
      </enumeration>
      <enumeration value="EaseIn">
        <annotation><documentation>EaseIn.</documentation></annotation>
      </enumeration>
      <enumeration value="EaseOut">
        <annotation><documentation>EaseOut.</documentation></annotation>
      </enumeration>
      <enumeration value="Exp">
        <annotation><documentation>Exponential.</documentation></annotation>
      </enumeration>
      <enumeration value="Linear">
        <annotation><documentation>Linear.</documentation></annotation>
      </enumeration>
      <enumeration value="Log">
        <annotation><documentation>Logarithmic.</documentation></annotation>
      </enumeration>
      <enumeration value="SCurve">
        <annotation><documentation>S-Curve.</documentation></annotation>
      </enumeration>
      <enumeration value="Sine">
        <annotation><documentation>Sine.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="Interpolation-i">
    <union>
      <simpleType>
        <restriction base="mcml:InterpolationType-i"/>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*(SCurve|Exp|Log|EaseIn|EaseOut)[ \t]*,[ \t]*[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*(Bezier|EaseIn|EaseOut)[ \t]*,[ \t]*[0-9.]+[ \t]*,[ \t]*[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Interpolation-e">
    <annotation><documentation>Used to interpolate between two key frames.</documentation></annotation>
    <attribute name="Type" type="mcml:InterpolationType-i" use="optional">
      <annotation><documentation>Interpolation type.</documentation></annotation>
    </attribute>
    <attribute name="Weight" use="optional">
      <annotation><documentation>The weight of this Interpolation as compared to a Linear interpolation.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="BezierHandle1" use="optional">
      <annotation><documentation>Bezier Interpolation Handle 1.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="BezierHandle2" use="optional">
      <annotation><documentation>Bezier Interpolation Handle 2.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="EasePercent" use="optional">
      <annotation><documentation>Ease Interpolation transition time percentage.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation inline construction.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="AlphaKeyframe-e">
    <annotation><documentation>Alpha keyframe.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Keyframe value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Time" type="mcml:BaseKeyframe.Time-i" use="optional">
      <annotation><documentation>Time that this key frame occurs at.</documentation></annotation>
    </attribute>
    <attribute name="RelativeTo" type="mcml:KeyframeValueReference-i" use="optional">
      <annotation><documentation>Specifies how to interpret the keyframe's value.</documentation></annotation>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation from this keyframe to the next.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="BaseKeyframe.Time-i">
    <restriction base="float"/>
  </simpleType>

  <simpleType name="AnchorAlignment-i">
    <restriction base="string">
      <enumeration value="Center">
        <annotation><documentation>Center between edges.</documentation></annotation>
      </enumeration>
      <enumeration value="Far">
        <annotation><documentation>Position to far edge.</documentation></annotation>
      </enumeration>
      <enumeration value="Fill">
        <annotation><documentation>Fill between edges (child will be forced to the size).</documentation></annotation>
      </enumeration>
      <enumeration value="Near">
        <annotation><documentation>Position to near edge.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="AnchorEdge-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[a-zA-Z0-9]+[ \t]*,[ \t]*[-]?[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[a-zA-Z0-9]+[ \t]*,[ \t]*[-]?[0-9.]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="AnchorEdge-e">
    <annotation><documentation>Edge anchor specification.</documentation></annotation>
    <attribute name="Id" use="optional">
      <annotation><documentation>Dependency reference of edge.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Percent" use="optional">
      <annotation><documentation>Weighted value relative to cooresponding reference dimension.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Offset" use="optional">
      <annotation><documentation>Additional offset value for edge.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="MaximumPercent" use="optional">
      <annotation><documentation>Maximum edge value relative to parent.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="MaximumOffset" use="optional">
      <annotation><documentation>Maximum edge value offset relative to parent.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="MinimumPercent" use="optional">
      <annotation><documentation>Minimum edge value relative to parent.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="MinimumOffset" use="optional">
      <annotation><documentation>Minimum edge value offset relative to parent.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="AnchorEdge" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>AnchorEdge inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="AnchorLayout-e">
    <annotation><documentation>Anchor layout.</documentation></annotation>
    <attribute name="SizeToHorizontalChildren" use="optional">
      <annotation><documentation>Reported size is the horizontal space the children occupy.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="SizeToVerticalChildren" use="optional">
      <annotation><documentation>Reported size is the vertical space the children occupy.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="AnchorLayoutInput-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="AnchorLayoutInput-e">
    <annotation><documentation>AnchorLayoutInput input.</documentation></annotation>
    <attribute name="Left" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Left anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Top" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Top anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Right" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Right anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Bottom" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Bottom anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Horizontal" type="mcml:AnchorAlignment-i" use="optional">
      <annotation><documentation>Horizontal alignment between edge anchors.</documentation></annotation>
    </attribute>
    <attribute name="Vertical" type="mcml:AnchorAlignment-i" use="optional">
      <annotation><documentation>Vertical alignment between edge anchors.</documentation></annotation>
    </attribute>
    <attribute name="ContributesToWidth" type="mcml:AnchorLayoutInput.ContributesToWidth-i" use="optional">
      <annotation><documentation>Contributes to width reported by layout.</documentation></annotation>
    </attribute>
    <attribute name="ContributesToHeight" type="mcml:AnchorLayoutInput.ContributesToHeight-i" use="optional">
      <annotation><documentation>Contributes to height reported by layout.</documentation></annotation>
    </attribute>
    <attribute name="AnchorLayoutInput" type="mcml:AnchorLayoutInput-i" use="optional">
      <annotation><documentation>AnchorLayoutInput inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="AnchorLayoutInput.ContributesToWidth-i">
    <restriction base="mcml:BooleanI-i"/>
  </simpleType>

  <simpleType name="AnchorLayoutInput.ContributesToHeight-i">
    <restriction base="mcml:BooleanI-i"/>
  </simpleType>

  <simpleType name="AnimationEventType-i">
    <restriction base="string">
      <enumeration value="Alpha">
        <annotation><documentation>Animation will be played when the alpha value for a view item changes.</documentation></annotation>
      </enumeration>
      <enumeration value="ContentChangeHide">
        <annotation><documentation>Animation will be played when the content hosted by a view item becomes hidden.</documentation></annotation>
      </enumeration>
      <enumeration value="ContentChangeShow">
        <annotation><documentation>Animation will be played when the content hosted by a view item becomes visible.</documentation></annotation>
      </enumeration>
      <enumeration value="GainFocus">
        <annotation><documentation>Animation will be played when the UI that contains the view item gains input focus.</documentation></annotation>
      </enumeration>
      <enumeration value="Hide">
        <annotation><documentation>Animation will be played when a view item becomes hidden.</documentation></annotation>
      </enumeration>
      <enumeration value="Idle">
        <annotation><documentation>Animation will be played when a view item is idle.</documentation></annotation>
      </enumeration>
      <enumeration value="LoseFocus">
        <annotation><documentation>Animation will be played when the UI that contains the view item loses input focus.</documentation></annotation>
      </enumeration>
      <enumeration value="Move">
        <annotation><documentation>Animation will be played when a view item is moved.</documentation></annotation>
      </enumeration>
      <enumeration value="Rotate">
        <annotation><documentation>Animation will be played when a view item is rotated.</documentation></annotation>
      </enumeration>
      <enumeration value="Scale">
        <annotation><documentation>Animation will be played when a view item changes scale.</documentation></annotation>
      </enumeration>
      <enumeration value="Show">
        <annotation><documentation>Animation will be played when a view item becomes visible.</documentation></annotation>
      </enumeration>
      <enumeration value="Size">
        <annotation><documentation>Animation will be played when a view item changes size.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="Vector3-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[-]?[0-9.]+[ \t]*,[ \t]*[-]?[0-9.]+[ \t]*,[ \t]*[-]?[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Vector3-e">
    <annotation><documentation>Vector3 object.</documentation></annotation>
    <attribute name="X" use="optional">
      <annotation><documentation>X value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Y" use="optional">
      <annotation><documentation>Y value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Z" use="optional">
      <annotation><documentation>Z value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Vector3" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Vector3 inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Animation-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^(animation|color|font|global|image|sound)://(.+):(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Animation-e">
    <annotation><documentation>Description of an animation associated with a view item.</documentation></annotation>
    <all>
      <element name="Keyframes" minOccurs="0">
        <annotation><documentation>Keyframes of the Animation.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="AlphaKeyframe" type="mcml:AlphaKeyframe-e"/>
          <element name="ColorKeyframe" type="mcml:ColorKeyframe-e"/>
          <element name="PositionKeyframe" type="mcml:PositionKeyframe-e"/>
          <element name="RotateKeyframe" type="mcml:RotateKeyframe-e"/>
          <element name="ScaleKeyframe" type="mcml:ScaleKeyframe-e"/>
          <element name="SizeKeyframe" type="mcml:SizeKeyframe-e"/>
        </choice>
      </complexType>
      </element>
    </all>
    <attribute name="Type" type="mcml:AnimationEventType-i" use="optional">
      <annotation><documentation>Type of event that this animation will respond to.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point percent (where 1=100%) used when applying a Scale or Rotation to the target. animating ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point offset (applied after percent) used when applying a Scale or Rotation to the target animating ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="RotationAxis" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Axis to use for rotating the animation.</documentation></annotation>
    </attribute>
    <attribute name="DisableMouseInput" use="optional">
      <annotation><documentation>Disable mouse input for the view item when an animation is playing.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Loop" use="optional">
      <annotation><documentation>Animation repeat count (negative means infinite).</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Animation" type="mcml:Animation-i" use="optional">
      <annotation><documentation>Animation inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ArrayListDataSet-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ArrayListDataSet-e">
    <annotation><documentation>ArrayList-based data set for Repeaters.</documentation></annotation>
    <all>
      <element name="Source" type="mcml:ListDataSet.Source-e" minOccurs="0">
        <annotation><documentation>The underlying source IList that is used to populate the data.</documentation></annotation>
      </element>
    </all>
    <attribute name="Source" type="mcml:ListDataSet.Source-i" use="optional">
      <annotation><documentation>The underlying source IList that is used to populate the data.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="ArrayListDataSet" type="mcml:ArrayListDataSet-i" use="optional">
      <annotation><documentation>ArrayListDataSet inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ListDataSet.Source-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ListDataSet.Source-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <simpleType name="ModelItem.Description-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ModelItem.UniqueId-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ObjectPath-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ObjectPath-e">
    <annotation><documentation>Represents an artibrary object path ("dot-into" object support).</documentation></annotation>
    <attribute name="ObjectPath" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>ObjectPath inline construction.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ITransformer-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ITransformer-e">
    <choice minOccurs="1" maxOccurs="1">
      <element name="BooleanTransformer" type="mcml:BooleanTransformer-e"/>
      <element name="DateTimeTransformer" type="mcml:DateTimeTransformer-e"/>
      <element name="FormatTransformer" type="mcml:FormatTransformer-e"/>
      <element name="MathTransformer" type="mcml:MathTransformer-e"/>
      <element name="TimeSpanTransformer" type="mcml:TimeSpanTransformer-e"/>
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <simpleType name="ConditionLogicalOp-i">
    <restriction base="string">
      <enumeration value="And">
        <annotation><documentation>AND logical operator.</documentation></annotation>
      </enumeration>
      <enumeration value="Or">
        <annotation><documentation>OR logical operator.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Binding-e">
    <annotation><documentation>Rule that binds a Source to a Target. The Target is updated whenever the Source changes.</documentation></annotation>
    <all>
      <element name="Transformer" type="mcml:ITransformer-e" minOccurs="0">
        <annotation><documentation>Optional data converter.</documentation></annotation>
      </element>
      <element name="Conditions" type="mcml:Rule.Conditions-e" minOccurs="0">
        <annotation><documentation>List of Conditions of this Rule.</documentation></annotation>
      </element>
      <element name="Actions" type="mcml:Rule.Actions-e" minOccurs="0">
        <annotation><documentation>List of Actions of this Rule.</documentation></annotation>
      </element>
    </all>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the binding.</documentation></annotation>
    </attribute>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Target of the binding.</documentation></annotation>
    </attribute>
    <attribute name="Transformer" type="mcml:ITransformer-i" use="optional">
      <annotation><documentation>Optional data converter.</documentation></annotation>
    </attribute>
    <attribute name="ConditionLogicalOp" type="mcml:ConditionLogicalOp-i" use="optional">
      <annotation><documentation>Rule matching behavior (AND'd or OR'd with peer Rules).</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Rule.Conditions-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="Modified" type="mcml:Modified-e"/>
      <element name="Equality" type="mcml:Equality-e"/>
      <element name="IsType" type="mcml:IsType-e"/>
      <element name="IsValid" type="mcml:IsValid-e"/>
    </choice>
  </complexType>

  <complexType name="Rule.Actions-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="DebugTrace" type="mcml:DebugTrace-e"/>
      <element name="Invoke" type="mcml:Invoke-e"/>
      <element name="Navigate" type="mcml:Navigate-e"/>
      <element name="PlayAnimation" type="mcml:PlayAnimation-e"/>
      <element name="PlaySound" type="mcml:PlaySound-e"/>
      <element name="Set" type="mcml:Set-e"/>
    </choice>
  </complexType>

  <simpleType name="BooleanChoice-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="BooleanChoice-e">
    <annotation><documentation>A Choice with two Options: True or False.</documentation></annotation>
    <all>
      <element name="Options" type="mcml:Choice.Options-e" minOccurs="0">
        <annotation><documentation>List of options.</documentation></annotation>
      </element>
    </all>
    <attribute name="Value" use="optional">
      <annotation><documentation>The value of the choice.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Options" type="mcml:Choice.Options-i" use="optional">
      <annotation><documentation>List of options.</documentation></annotation>
    </attribute>
    <attribute name="Chosen" type="mcml:Choice.Chosen-i" use="optional">
      <annotation><documentation>The currently selected (chosen) object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="ChosenIndex" type="mcml:Choice.ChosenIndex-i" use="optional">
      <annotation><documentation>The index of the current chosen object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="Default" type="mcml:Choice.Default-i" use="optional">
      <annotation><documentation>The default object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="DefaultIndex" type="mcml:Choice.DefaultIndex-i" use="optional">
      <annotation><documentation>The index of the default object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="HasNextValue" type="mcml:Choice.HasNextValue-i" use="optional">
      <annotation><documentation>Determines if NextValue() will succeed.</documentation></annotation>
    </attribute>
    <attribute name="HasPreviousValue" type="mcml:Choice.HasPreviousValue-i" use="optional">
      <annotation><documentation>Determines if PreviousValue() will succeed.</documentation></annotation>
    </attribute>
    <attribute name="Wrap" type="mcml:Choice.Wrap-i" use="optional">
      <annotation><documentation>Determines if should wrap when NextValue/PreviousValue reaches the end/beginning of the list.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="BooleanChoice" type="mcml:BooleanChoice-i" use="optional">
      <annotation><documentation>BooleanChoice inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Choice.Options-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Choice.Options-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <simpleType name="Choice.Chosen-i">
    <restriction base="string"/>
  </simpleType>

  <simpleType name="Choice.ChosenIndex-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Choice.Default-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Choice.DefaultIndex-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Choice.HasNextValue-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Choice.HasPreviousValue-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Choice.Wrap-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="BooleanI-i">
    <union>
      <simpleType>
        <restriction base="string">
          <enumeration value="false">
            <annotation><documentation>false</documentation></annotation>
          </enumeration>
          <enumeration value="true">
            <annotation><documentation>true</documentation></annotation>
          </enumeration>
      </restriction>
    </simpleType>
    </union>
  </simpleType>

  <complexType name="BooleanI-e">
    <annotation><documentation></documentation></annotation>
    <attribute name="BooleanI" type="mcml:BooleanI-i" use="optional">
      <annotation><documentation>BooleanI inline construction.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="BooleanTransformer-e">
    <annotation><documentation>Boolean transformer.</documentation></annotation>
    <attribute name="Inverse" use="optional">
      <annotation><documentation>Take the inverse result of the transform.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ByteRangedValue-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ByteRangedValue-e">
    <annotation><documentation>An byte number value with a minimum and maximum value.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Current value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="unsignedByte"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MinValue" use="optional">
      <annotation><documentation>Minimum value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="unsignedByte"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MaxValue" use="optional">
      <annotation><documentation>Maximum value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="unsignedByte"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Step" use="optional">
      <annotation><documentation>Increment/decrememt value when NextValue()/PreviousValue() is used.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="unsignedByte"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="ByteRangedValue" type="mcml:ByteRangedValue-i" use="optional">
      <annotation><documentation>ByteRangedValue inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Changed-e">
    <annotation><documentation>Rule that invokes actions based on a Source change.</documentation></annotation>
    <all>
      <element name="Conditions" type="mcml:Rule.Conditions-e" minOccurs="0">
        <annotation><documentation>List of Conditions of this Rule.</documentation></annotation>
      </element>
      <element name="Actions" type="mcml:Rule.Actions-e" minOccurs="0">
        <annotation><documentation>List of Actions of this Rule.</documentation></annotation>
      </element>
    </all>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source to track for changes.</documentation></annotation>
    </attribute>
    <attribute name="InitialEvaluate" use="optional">
      <annotation><documentation>Initial evaluation value during startup.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="ConditionLogicalOp" type="mcml:ConditionLogicalOp-i" use="optional">
      <annotation><documentation>Rule matching behavior (AND'd or OR'd with peer Rules).</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Choice-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Choice-e">
    <annotation><documentation>A selection of exclusive options.</documentation></annotation>
    <all>
      <element name="Options" type="mcml:Choice.Options-e" minOccurs="0">
        <annotation><documentation>List of options.</documentation></annotation>
      </element>
    </all>
    <attribute name="Options" type="mcml:Choice.Options-i" use="optional">
      <annotation><documentation>List of options.</documentation></annotation>
    </attribute>
    <attribute name="Chosen" type="mcml:Choice.Chosen-i" use="optional">
      <annotation><documentation>The currently selected (chosen) object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="ChosenIndex" type="mcml:Choice.ChosenIndex-i" use="optional">
      <annotation><documentation>The index of the current chosen object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="Default" type="mcml:Choice.Default-i" use="optional">
      <annotation><documentation>The default object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="DefaultIndex" type="mcml:Choice.DefaultIndex-i" use="optional">
      <annotation><documentation>The index of the default object within the Options list.</documentation></annotation>
    </attribute>
    <attribute name="HasNextValue" type="mcml:Choice.HasNextValue-i" use="optional">
      <annotation><documentation>Determines if NextValue() will succeed.</documentation></annotation>
    </attribute>
    <attribute name="HasPreviousValue" type="mcml:Choice.HasPreviousValue-i" use="optional">
      <annotation><documentation>Determines if PreviousValue() will succeed.</documentation></annotation>
    </attribute>
    <attribute name="Wrap" type="mcml:Choice.Wrap-i" use="optional">
      <annotation><documentation>Determines if should wrap when NextValue/PreviousValue reaches the end/beginning of the list.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="Choice" type="mcml:Choice-i" use="optional">
      <annotation><documentation>Choice inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ClickHandler-e">
    <annotation><documentation>Event handler that provides button-like input behavior to a UI object.</documentation></annotation>
    <attribute name="HandlePrimaryMouseButton" use="optional">
      <annotation><documentation>Handle the primary mouse button.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandleEnterSpaceKeys" use="optional">
      <annotation><documentation>Handle the Space and Enter keys.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Clicking" use="optional">
      <annotation><documentation>Boolean value indicating whether or not the UI is currently in the middle of a click action.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Command" type="mcml:ICommand-i" use="optional">
      <annotation><documentation>Command associated with the click handler. The invoke method for the command will be called when a click event occurs.</documentation></annotation>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="CustomStagedInputHandler.HandlerStage-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:InputHandlerStage-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Color-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[0-9.]+[ \t]*,[ \t]*[0-9.]+[ \t]*,[ \t]*[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[0-9.]+[ \t]*,[ \t]*[0-9.]+[ \t]*,[ \t]*[0-9.]+[ \t]*,[ \t]*[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:Colors-i"/>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(animation|color|font|global|image|sound)://(.+):(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Color-e">
    <annotation><documentation>Color object.</documentation></annotation>
    <attribute name="R" use="optional">
      <annotation><documentation>Red channel.</documentation></annotation>
      <simpleType>
        <restriction base="unsignedByte"/>
      </simpleType>
    </attribute>
    <attribute name="G" use="optional">
      <annotation><documentation>Green channel.</documentation></annotation>
      <simpleType>
        <restriction base="unsignedByte"/>
      </simpleType>
    </attribute>
    <attribute name="B" use="optional">
      <annotation><documentation>Blue channel.</documentation></annotation>
      <simpleType>
        <restriction base="unsignedByte"/>
      </simpleType>
    </attribute>
    <attribute name="A" use="optional">
      <annotation><documentation>Alpha channel.</documentation></annotation>
      <simpleType>
        <restriction base="unsignedByte"/>
      </simpleType>
    </attribute>
    <attribute name="Color" type="mcml:Color-i" use="optional">
      <annotation><documentation>Color inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Rotation-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^-?[0-9.]+(deg|rad);[0-9.]+,[0-9.]+,[0-9.]+$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Rotation-e">
    <annotation><documentation>Rotation object.</documentation></annotation>
    <attribute name="Axis" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Three-dimensional axis to use for the rotation.</documentation></annotation>
    </attribute>
    <attribute name="AngleRadians" use="optional">
      <annotation><documentation>Angle of rotation in radians.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="AngleDegrees" use="optional">
      <annotation><documentation>Angle of rotation in degrees.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Size-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[0-9]+[ \t]*,[ \t]*[0-9]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Size-e">
    <annotation><documentation>Size object.</documentation></annotation>
    <attribute name="Width" use="optional">
      <annotation><documentation>Size width.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Height" use="optional">
      <annotation><documentation>Size height.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Size" type="mcml:Size-i" use="optional">
      <annotation><documentation>Size inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Inset-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Inset-e">
    <annotation><documentation>Inset object.</documentation></annotation>
    <attribute name="Left" use="optional">
      <annotation><documentation>Left value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Top" use="optional">
      <annotation><documentation>Top value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Right" use="optional">
      <annotation><documentation>Right value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Bottom" use="optional">
      <annotation><documentation>Bottom value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Inset" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Inset inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ILayout-i">
    <union>
      <simpleType>
        <restriction base="string">
          <enumeration value="Anchor">
            <annotation><documentation>Arrange children by anchoring edges (size-to-children).</documentation></annotation>
          </enumeration>
          <enumeration value="Center">
            <annotation><documentation>Center children (size-to-parent).</documentation></annotation>
          </enumeration>
          <enumeration value="Dock">
            <annotation><documentation>Arrange children along border of parent (size-to-parent).</documentation></annotation>
          </enumeration>
          <enumeration value="Fill">
            <annotation><documentation>Make children the size of the parent (size-to-parent).</documentation></annotation>
          </enumeration>
          <enumeration value="Form">
            <annotation><documentation>Arrange children by anchoring edges (size-to-parent).</documentation></annotation>
          </enumeration>
          <enumeration value="Grid">
            <annotation><documentation>Arrange children in a grid (size-to-children).</documentation></annotation>
          </enumeration>
          <enumeration value="HorizontalFlow">
            <annotation><documentation>Flow children in a horizontal orientation (size-to-children).</documentation></annotation>
          </enumeration>
          <enumeration value="Scale">
            <annotation><documentation>Scale children and include space in layout (size-to-parent).</documentation></annotation>
          </enumeration>
          <enumeration value="VerticalFlow">
            <annotation><documentation>Flow children in a vertical orientation (size-to-children).</documentation></annotation>
          </enumeration>
      </restriction>
    </simpleType>
    </union>
  </simpleType>

  <complexType name="ILayout-e">
    <choice minOccurs="1" maxOccurs="1">
      <element name="AnchorLayout" type="mcml:AnchorLayout-e"/>
      <element name="DockLayout" type="mcml:DockLayout-e"/>
      <element name="FlowLayout" type="mcml:FlowLayout-e"/>
      <element name="GridLayout" type="mcml:GridLayout-e"/>
      <element name="RotateLayout" type="mcml:RotateLayout-e"/>
      <element name="ScaleLayout" type="mcml:ScaleLayout-e"/>
    </choice>
  </complexType>

  <simpleType name="ILayoutInput-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ILayoutInput-e">
    <choice minOccurs="1" maxOccurs="1">
      <element name="AnchorLayoutInput" type="mcml:AnchorLayoutInput-e"/>
      <element name="DockLayoutInput" type="mcml:DockLayoutInput-e"/>
      <element name="FormLayoutInput" type="mcml:FormLayoutInput-e"/>
    </choice>
  </complexType>

  <complexType name="Clip-e">
    <annotation><documentation>Visual primitive used for clipping (drawing will not extend beyond its bounds).</documentation></annotation>
    <all>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="Orientation" type="mcml:Clip.Orientation-i" use="optional">
      <annotation><documentation>The orientation of the clipping fade.</documentation></annotation>
    </attribute>
    <attribute name="FadeSize" type="mcml:Clip.FadeSize-i" use="optional">
      <annotation><documentation>The size of the clip fade.</documentation></annotation>
    </attribute>
    <attribute name="FarOffset" type="mcml:Clip.FarOffset-i" use="optional">
      <annotation><documentation>The offset for the far edge of the gradient (dependent on the orientation).</documentation></annotation>
    </attribute>
    <attribute name="NearOffset" type="mcml:Clip.NearOffset-i" use="optional">
      <annotation><documentation>The offset for the near edge of the gradient (dependent on the orientation).</documentation></annotation>
    </attribute>
    <attribute name="ShowNear" type="mcml:Clip.ShowNear-i" use="optional">
      <annotation><documentation>Toggle of the near fade.</documentation></annotation>
    </attribute>
    <attribute name="ShowFar" type="mcml:Clip.ShowFar-i" use="optional">
      <annotation><documentation>Toggle of the far fade.</documentation></annotation>
    </attribute>
    <attribute name="ColorMask" type="mcml:Color-i" use="optional">
      <annotation><documentation>Defines what sort of effect the fade will have. By default it is an alpha fade.</documentation></annotation>
    </attribute>
    <attribute name="FadeAmount" type="mcml:Clip.FadeAmount-i" use="optional">
      <annotation><documentation>Defines the "severity" of the fade.</documentation></annotation>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Clip.Orientation-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:Orientation-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Clip.FadeSize-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Clip.FarOffset-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Clip.NearOffset-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Clip.ShowNear-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Clip.ShowFar-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="Clip.FadeAmount-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ViewItem.Children-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="Clip" type="mcml:Clip-e"/>
      <element name="ColorFill" type="mcml:ColorFill-e"/>
      <element name="Graphic" type="mcml:Graphic-e"/>
      <element name="Host" type="mcml:Host-e"/>
      <element name="NowPlaying" type="mcml:NowPlaying-e"/>
      <element name="Repeater" type="mcml:Repeater-e"/>
      <element name="Scroller" type="mcml:Scroller-e"/>
      <element name="Panel" type="mcml:Panel-e"/>
      <element name="Text" type="mcml:Text-e"/>
      <element name="Video" type="mcml:Video-e"/>
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <simpleType name="ViewItem.Alpha-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.ColorFilter-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:Color-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.Visible-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ViewItem.Animations-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="Animation" type="mcml:Animation-e"/>
      <element name="MergeAnimation" type="mcml:MergeAnimation-e"/>
      <element name="SwitchAnimation" type="mcml:SwitchAnimation-e"/>
      <element name="TransformAnimation" type="mcml:TransformAnimation-e"/>
      <element name="TransformByAttributeAnimation" type="mcml:TransformByAttributeAnimation-e"/>
    </choice>
  </complexType>

  <simpleType name="ViewItem.AnimationsEnabled-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.MouseInteractive-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.TouchInteractive-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.Navigation-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:NavigationPolicies-i"/>
      </simpleType>
      <simpleType>
        <restriction base="string">
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.FocusOrder-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ViewItem.Name-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ColorFill-e">
    <annotation><documentation>Visual primitive used for displaying a solid fill.</documentation></annotation>
    <all>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="Content" type="mcml:Color-i" use="optional">
      <annotation><documentation>Fill color.</documentation></annotation>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ColorKeyframe-e">
    <annotation><documentation>Color keyframe.</documentation></annotation>
    <attribute name="Value" type="mcml:Color-i" use="optional">
      <annotation><documentation>Color value.</documentation></annotation>
    </attribute>
    <attribute name="Time" type="mcml:BaseKeyframe.Time-i" use="optional">
      <annotation><documentation>Time that this key frame occurs at.</documentation></annotation>
    </attribute>
    <attribute name="RelativeTo" type="mcml:KeyframeValueReference-i" use="optional">
      <annotation><documentation>Specifies how to interpret the keyframe's value.</documentation></annotation>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation from this keyframe to the next.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Colors-i">
    <restriction base="string">
      <enumeration value="AliceBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="AntiqueWhite">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Aqua">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Aquamarine">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Azure">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Beige">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Bisque">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Black">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="BlanchedAlmond">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Blue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="BlueViolet">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Brown">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="BurlyWood">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="CadetBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Chartreuse">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Chocolate">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Coral">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="CornflowerBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Cornsilk">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Crimson">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Cyan">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkCyan">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkGoldenrod">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkGray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkKhaki">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkMagenta">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkOliveGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkOrange">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkOrchid">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkRed">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkSalmon">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkSeaGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkSlateBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkSlateGray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkTurquoise">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DarkViolet">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DeepPink">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DeepSkyBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DimGray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="DodgerBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Feldspar">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Firebrick">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="FloralWhite">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="ForestGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Fuchsia">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Gainsboro">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="GhostWhite">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Gold">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Goldenrod">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Gray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Green">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="GreenYellow">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Honeydew">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="HotPink">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="IndianRed">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Indigo">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Ivory">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Khaki">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Lavender">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LavenderBlush">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LawnGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LemonChiffon">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightCoral">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightCyan">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightGoldenrodYellow">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightGray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightPink">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightSalmon">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightSeaGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightSkyBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightSlateBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightSlateGray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightSteelBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LightYellow">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Lime">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="LimeGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Linen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Magenta">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Maroon">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumAquamarine">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumOrchid">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumPurple">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumSeaGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumSlateBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumSpringGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumTurquoise">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MediumVioletRed">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MidnightBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MintCream">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="MistyRose">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Moccasin">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="NavajoWhite">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Navy">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="OldLace">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Olive">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="OliveDrab">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Orange">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="OrangeRed">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Orchid">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PaleGoldenrod">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PaleGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PaleTurquoise">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PaleVioletRed">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PapayaWhip">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PeachPuff">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Peru">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Pink">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Plum">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="PowderBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Purple">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Red">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="RosyBrown">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="RoyalBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SaddleBrown">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Salmon">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SandyBrown">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SeaGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SeaShell">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Sienna">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Silver">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SkyBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SlateBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SlateGray">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Snow">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SpringGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="SteelBlue">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Tan">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Teal">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Thistle">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Tomato">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Transparent">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Turquoise">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="TVBlack">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="TVWhite">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Violet">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="VioletRed">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Wheat">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="White">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="WhiteSmoke">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="Yellow">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
      <enumeration value="YellowGreen">
        <annotation><documentation>Color name</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="ColorScheme-i">
    <restriction base="string">
      <enumeration value="Default">
        <annotation><documentation>Default color scheme.</documentation></annotation>
      </enumeration>
      <enumeration value="HighContrast1">
        <annotation><documentation>Accessible High Contrast 1.</documentation></annotation>
      </enumeration>
      <enumeration value="HighContrast2">
        <annotation><documentation>Accessible High Contrast 2.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="Command-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Command-e">
    <annotation><documentation>A ModelItem that has a notion of being invoked.</documentation></annotation>
    <attribute name="Available" type="mcml:Command.Available-i" use="optional">
      <annotation><documentation>Command availability.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="Command" type="mcml:Command-i" use="optional">
      <annotation><documentation>Command inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Command.Available-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="ConditionOp-i">
    <restriction base="string">
      <enumeration value="ChangedTo">
        <annotation><documentation>Changed to value.</documentation></annotation>
      </enumeration>
      <enumeration value="Equals">
        <annotation><documentation>Equals.</documentation></annotation>
      </enumeration>
      <enumeration value="GreaterThan">
        <annotation><documentation>Greater than.</documentation></annotation>
      </enumeration>
      <enumeration value="GreaterThanOrEquals">
        <annotation><documentation>Greater than or equals.</documentation></annotation>
      </enumeration>
      <enumeration value="LessThan">
        <annotation><documentation>Less than.</documentation></annotation>
      </enumeration>
      <enumeration value="LessThanOrEquals">
        <annotation><documentation>Less than or equals.</documentation></annotation>
      </enumeration>
      <enumeration value="NotEquals">
        <annotation><documentation>Not equals.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Condition-e">
    <annotation><documentation>Rule that invokes actions based on a logical condition.</documentation></annotation>
    <all>
      <element name="Conditions" type="mcml:Rule.Conditions-e" minOccurs="0">
        <annotation><documentation>List of Conditions of this Rule.</documentation></annotation>
      </element>
      <element name="Actions" type="mcml:Rule.Actions-e" minOccurs="0">
        <annotation><documentation>List of Actions of this Rule.</documentation></annotation>
      </element>
    </all>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
    <attribute name="ConditionOp" type="mcml:ConditionOp-i" use="optional">
      <annotation><documentation>The type of condition operation.</documentation></annotation>
    </attribute>
    <attribute name="SourceValue" use="optional">
      <annotation><documentation>The value to check against the Source.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Target to set if the condition is true (optional).</documentation></annotation>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>The value of the Target to set if the condition is true (optional).</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="ConditionLogicalOp" type="mcml:ConditionLogicalOp-i" use="optional">
      <annotation><documentation>Rule matching behavior (AND'd or OR'd with peer Rules).</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Control-e">
    <annotation><documentation>"Input" object.</documentation></annotation>
    <attribute name="KeyFocusOnMouseEnter" use="optional">
      <annotation><documentation>Determines if should try to take key focus automatically whenever mouse focus is gained.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="KeyFocusOnMouseDown" use="optional">
      <annotation><documentation>Determines if should try to take key focus automatically whenever a mouse button is pressed.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="AllowDoubleClicks" use="optional">
      <annotation><documentation>Determines if double clicks should be tracked.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="CreateInterestOnFocus" use="optional">
      <annotation><documentation>Is this an "area of interest" when focused?</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="CreateInterestTarget" use="optional">
      <annotation><documentation>When creating an "area of interest" on focus (see CreateInterestOnFocus), what ViewItem should we apply the interest to?</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="MakeTopmostOnFocus" use="optional">
      <annotation><documentation>When keyboard focused, paint visuals on top of all others.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="KeyRepeatThreshold" use="optional">
      <annotation><documentation>Threshold for the minimum number of milliseconds allowed to occur between repeated key events. Repeats that occur before the threshold has passed are ignored.</documentation></annotation>
      <simpleType>
        <restriction base="unsignedInt"/>
      </simpleType>
    </attribute>
    <attribute name="KeyFocus" use="optional">
      <annotation><documentation>Determines if currently have key focus.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="DeepKeyFocus" use="optional">
      <annotation><documentation>Determines if currently have "deep" key focus (i.e. this or any descendant has key focus).</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="MouseFocus" use="optional">
      <annotation><documentation>Determines if currently have mouse focus.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="DeepMouseFocus" use="optional">
      <annotation><documentation>Determines if currently have "deep" mouse focus (i.e. this or any descendant has mouse focus).</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Enabled" use="optional">
      <annotation><documentation>Local enabled state.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="FullyEnabled" use="optional">
      <annotation><documentation>Determines if fully enabled (i.e. this and all ancestors above are enabled).</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="KeyInteractive" use="optional">
      <annotation><documentation>Can accept key focus.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="DateTimeFormats-i">
    <restriction base="string">
      <enumeration value="AbbreviatedLongDate">
        <annotation><documentation>Use the long date format with year removed and abbreviated names.</documentation></annotation>
      </enumeration>
      <enumeration value="AbbreviatedShortDate">
        <annotation><documentation>Use the short date format with year removed and abbreviated names.</documentation></annotation>
      </enumeration>
      <enumeration value="AbbreviateNames">
        <annotation><documentation>Abbreviate the name of the month and/or day-of-week.</documentation></annotation>
      </enumeration>
      <enumeration value="AbbreviateYear">
        <annotation><documentation>Abbreviate the year from four digits to two digits.</documentation></annotation>
      </enumeration>
      <enumeration value="ConvertLocalToUtc">
        <annotation><documentation>Convert the DateTime from the local time zone to UTC.</documentation></annotation>
      </enumeration>
      <enumeration value="ConvertUtcToLocal">
        <annotation><documentation>Convert the DateTime from UTC to the local time zone.</documentation></annotation>
      </enumeration>
      <enumeration value="Date">
        <annotation><documentation>Format as a date.</documentation></annotation>
      </enumeration>
      <enumeration value="ForceDayOfWeek">
        <annotation><documentation>Force the date format to include day-of-week.</documentation></annotation>
      </enumeration>
      <enumeration value="LongDate">
        <annotation><documentation>Use the long date format.</documentation></annotation>
      </enumeration>
      <enumeration value="LongTime">
        <annotation><documentation>Use the long time format.</documentation></annotation>
      </enumeration>
      <enumeration value="MonthDay">
        <annotation><documentation>Use the month day format.</documentation></annotation>
      </enumeration>
      <enumeration value="NoAMPM">
        <annotation><documentation>Remove the AM/PM indicator, if any.</documentation></annotation>
      </enumeration>
      <enumeration value="NoDayOfWeek">
        <annotation><documentation>Remove the day-of-week, if any.</documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation>No format; empty string is returned.</documentation></annotation>
      </enumeration>
      <enumeration value="NoYear">
        <annotation><documentation>Remove the year (and era, if any).</documentation></annotation>
      </enumeration>
      <enumeration value="ShortDate">
        <annotation><documentation>Use the short date format.</documentation></annotation>
      </enumeration>
      <enumeration value="ShortTime">
        <annotation><documentation>Use the short time format.</documentation></annotation>
      </enumeration>
      <enumeration value="Time">
        <annotation><documentation>Format as a time.</documentation></annotation>
      </enumeration>
      <enumeration value="YearMonth">
        <annotation><documentation>Use the year month format.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="DateTimeTransformer-e">
    <annotation><documentation>DateTime transformer.</documentation></annotation>
    <attribute name="Format" use="optional">
      <annotation><documentation>Date/time format.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="mcml:DateTimeFormats-i"/>
          </simpleType>
          <simpleType>
            <restriction base="string">
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="DebugLabelFormat-i">
    <restriction base="string">
      <enumeration value="Full">
        <annotation><documentation>Display names and mouse/key interactivity icons.</documentation></annotation>
      </enumeration>
      <enumeration value="Name">
        <annotation><documentation>Display the name of the ViewItem (child UI name for Hosts).</documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation>Do not display a label.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="DebugOutlineScope-i">
    <restriction base="string">
      <enumeration value="All">
        <annotation><documentation>Enable outlines for all ViewItems.</documentation></annotation>
      </enumeration>
      <enumeration value="FlaggedOnly">
        <annotation><documentation>Only display outlines for ViewItems that have the DebugOutline property set.</documentation></annotation>
      </enumeration>
      <enumeration value="Hosts">
        <annotation><documentation>Display outlines for all Hosts.</documentation></annotation>
      </enumeration>
      <enumeration value="Input">
        <annotation><documentation>Display outlines for any Host that contains a mouse/key active child UI.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="FontStyles-i">
    <restriction base="string">
      <enumeration value="Bold">
        <annotation><documentation>Bold formatting.</documentation></annotation>
      </enumeration>
      <enumeration value="Italic">
        <annotation><documentation>Italic formatting.</documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation>No extra formatting.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="Font-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[a-zA-Z0-9- ]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[a-zA-Z0-9- ]+[ \t]*,[ \t]*[0-9.]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[a-zA-Z0-9- ]+[ \t]*,[ \t]*[0-9.]+[ \t]*,[ \t]*[a-zA-Z,]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(animation|color|font|global|image|sound)://(.+):(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Font-e">
    <annotation><documentation>Font object.</documentation></annotation>
    <attribute name="FontSize" use="optional">
      <annotation><documentation>The size of the font (in points).</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="FontStyle" type="mcml:FontStyles-i" use="optional">
      <annotation><documentation>The style of the font.</documentation></annotation>
    </attribute>
    <attribute name="FontName" use="optional">
      <annotation><documentation>The font face name.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Font" type="mcml:Font-i" use="optional">
      <annotation><documentation>Font inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Image-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^(animation|color|font|global|image|sound)://(.+):(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(resx|res|file|http|https)://(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Image-e">
    <annotation><documentation>Image object.</documentation></annotation>
    <attribute name="Source" use="optional">
      <annotation><documentation>The source the image.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Flippable" use="optional">
      <annotation><documentation>Specifies if the image should be mirrored on RTL systems.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="NineGrid" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Specifies insets for nine-grid drawing.</documentation></annotation>
    </attribute>
    <attribute name="Image" type="mcml:Image-i" use="optional">
      <annotation><documentation>Image inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="DebugOutlines-e">
    <annotation><documentation>Debugging outline support.</documentation></annotation>
    <attribute name="Root" use="optional">
      <annotation><documentation>Root of content for displaying outlines.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Canvas" use="optional">
      <annotation><documentation>Peer of Root used for painting outlines.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Enabled" use="optional">
      <annotation><documentation>Enable debugging outlines.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="OutlineScope" type="mcml:DebugOutlineScope-i" use="optional">
      <annotation><documentation>Determines set of ViewItems to include in displaying outlines.</documentation></annotation>
    </attribute>
    <attribute name="OutlineLabel" type="mcml:DebugLabelFormat-i" use="optional">
      <annotation><documentation>Determines type of label to display with outlines.</documentation></annotation>
    </attribute>
    <attribute name="OutlineColor" type="mcml:Color-i" use="optional">
      <annotation><documentation>Color of outlines.</documentation></annotation>
    </attribute>
    <attribute name="HostOutlineColor" type="mcml:Color-i" use="optional">
      <annotation><documentation>Color of outlines for Host types.</documentation></annotation>
    </attribute>
    <attribute name="TextColor" type="mcml:Color-i" use="optional">
      <annotation><documentation>Color of text in label.</documentation></annotation>
    </attribute>
    <attribute name="TextFont" type="mcml:Font-i" use="optional">
      <annotation><documentation>Font to use for text of label.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractiveImage" type="mcml:Image-i" use="optional">
      <annotation><documentation>Image to use to denote mouse interactive.</documentation></annotation>
    </attribute>
    <attribute name="MouseFocusImage" type="mcml:Image-i" use="optional">
      <annotation><documentation>Image to use to denote mouse focus.</documentation></annotation>
    </attribute>
    <attribute name="KeyInteractiveImage" type="mcml:Image-i" use="optional">
      <annotation><documentation>Image to use to denote key interactive.</documentation></annotation>
    </attribute>
    <attribute name="KeyFocusImage" type="mcml:Image-i" use="optional">
      <annotation><documentation>Image to use to denote key focus.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="DebugTrace-e">
    <annotation><documentation>Action used for debugging Rules.</documentation></annotation>
    <all>
      <element name="Params" minOccurs="0">
        <annotation><documentation>Parameters to use with formatted messages.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="ObjectPath" type="mcml:ObjectPath-e"/>
        </choice>
      </complexType>
      </element>
    </all>
    <attribute name="Message" use="optional">
      <annotation><documentation>String used to format trace output.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="Default-e">
    <annotation><documentation>Rule that acts as a "default" if no other higher-priority Rules apply. Does a set on a Target.</documentation></annotation>
    <all>
      <element name="Transformer" type="mcml:ITransformer-e" minOccurs="0">
        <annotation><documentation>Optional data converter.</documentation></annotation>
      </element>
      <element name="Conditions" type="mcml:Rule.Conditions-e" minOccurs="0">
        <annotation><documentation>List of Conditions of this Rule.</documentation></annotation>
      </element>
      <element name="Actions" type="mcml:Rule.Actions-e" minOccurs="0">
        <annotation><documentation>List of Actions of this Rule.</documentation></annotation>
      </element>
    </all>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Target of the value.</documentation></annotation>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>The Target's value.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Transformer" type="mcml:ITransformer-i" use="optional">
      <annotation><documentation>Optional data converter.</documentation></annotation>
    </attribute>
    <attribute name="ConditionLogicalOp" type="mcml:ConditionLogicalOp-i" use="optional">
      <annotation><documentation>Rule matching behavior (AND'd or OR'd with peer Rules).</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="DockLayout-e">
    <annotation><documentation>Dock layout.</documentation></annotation>
    <attribute name="SizeToChildren" use="optional">
      <annotation><documentation>Size to contents.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="DockLayoutAlignment-i">
    <restriction base="string">
      <enumeration value="Center">
        <annotation><documentation>Center alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Far">
        <annotation><documentation>Far alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Fill">
        <annotation><documentation>Fill alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Near">
        <annotation><documentation>Near alignment.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="DockLayoutPosition-i">
    <restriction base="string">
      <enumeration value="Bottom">
        <annotation><documentation>Bottom positioning.</documentation></annotation>
      </enumeration>
      <enumeration value="Client">
        <annotation><documentation>"Remaining space" positioning.</documentation></annotation>
      </enumeration>
      <enumeration value="Left">
        <annotation><documentation>Left positioning.</documentation></annotation>
      </enumeration>
      <enumeration value="Right">
        <annotation><documentation>Right positioning.</documentation></annotation>
      </enumeration>
      <enumeration value="Top">
        <annotation><documentation>Top positioning.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="DockLayoutInput-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="DockLayoutInput-e">
    <annotation><documentation>Dock layout child layout input.</documentation></annotation>
    <attribute name="Position" type="mcml:DockLayoutPosition-i" use="optional">
      <annotation><documentation>Dock layout position.</documentation></annotation>
    </attribute>
    <attribute name="Alignment" type="mcml:DockLayoutAlignment-i" use="optional">
      <annotation><documentation>Dock layout alignment.</documentation></annotation>
    </attribute>
    <attribute name="DockLayoutInput" type="mcml:DockLayoutInput-i" use="optional">
      <annotation><documentation>DockLayoutInput inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="EditableDigits-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="EditableDigits-e">
    <annotation><documentation>Represents a numeric-only user-editable string.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Current text value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Overtype" type="mcml:EditableText.Overtype-i" use="optional">
      <annotation><documentation>Enable overtype.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="EditableDigits" type="mcml:EditableDigits-i" use="optional">
      <annotation><documentation>EditableDigits inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="EditableText.Overtype-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </union>
  </simpleType>

  <simpleType name="EditableText-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="EditableText-e">
    <annotation><documentation>Represents a user-editable string.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Current text value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Overtype" type="mcml:EditableText.Overtype-i" use="optional">
      <annotation><documentation>Enable overtype.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="EditableText" type="mcml:EditableText-i" use="optional">
      <annotation><documentation>EditableText inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="NavigationDirection-i">
    <restriction base="string">
      <enumeration value="Backward">
        <annotation><documentation>Backward navigation from current page.</documentation></annotation>
      </enumeration>
      <enumeration value="Forward">
        <annotation><documentation>Forward navigation to new page.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Environment-e">
    <annotation><documentation>Environment object which tracks the state of the current host.</documentation></annotation>
    <attribute name="IsNavigating" use="optional">
      <annotation><documentation>Indicates whether a page navigation is in progress.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="NavigationDirection" type="mcml:NavigationDirection-i" use="optional">
      <annotation><documentation>Direction of the most recent page navigation.</documentation></annotation>
    </attribute>
    <attribute name="IsRightToLeft" use="optional">
      <annotation><documentation>Determines if the system is right-to-left reading order (RTL).</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="ColorScheme" type="mcml:ColorScheme-i" use="optional">
      <annotation><documentation>Determine current active color scheme.</documentation></annotation>
    </attribute>
    <attribute name="IsWidescreen" use="optional">
      <annotation><documentation>Determines if in widescreen mode.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Equality-e">
    <annotation><documentation>Equality rule.</documentation></annotation>
    <all>
      <element name="SourceTransformer" type="mcml:ITransformer-e" minOccurs="0">
        <annotation><documentation>Source conversion.</documentation></annotation>
      </element>
    </all>
    <attribute name="ConditionOp" type="mcml:ConditionOp-i" use="optional">
      <annotation><documentation>Logical condition operator.</documentation></annotation>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>Value to compare against.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="SourceTransformer" type="mcml:ITransformer-i" use="optional">
      <annotation><documentation>Source conversion.</documentation></annotation>
    </attribute>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ExceptionHandler-e">
    <annotation><documentation>ExceptionHandler.</documentation></annotation>
    <attribute name="Command" type="mcml:ICommand-i" use="optional">
      <annotation><documentation>Command.</documentation></annotation>
    </attribute>
    <attribute name="CaughtException" use="optional">
      <annotation><documentation>CaughtException.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="CaughtExceptionType" use="optional">
      <annotation><documentation>CaughtExceptionType.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Orientation-i">
    <restriction base="string">
      <enumeration value="Horizontal">
        <annotation><documentation>Horizontal orientation.</documentation></annotation>
      </enumeration>
      <enumeration value="Vertical">
        <annotation><documentation>Vertical orientation.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="MajorMinor-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="MajorMinor-e">
    <annotation><documentation>A 2D Vector for dealing with the X and Y axes in an abstracted way.</documentation></annotation>
    <attribute name="Major" use="optional">
      <annotation><documentation>Major value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Minor" use="optional">
      <annotation><documentation>Minor value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="MajorMinor" type="mcml:MajorMinor-i" use="optional">
      <annotation><documentation>MajorMinor inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ItemAlignment-i">
    <restriction base="string">
      <enumeration value="Center">
        <annotation><documentation>Center alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Far">
        <annotation><documentation>Far alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Fill">
        <annotation><documentation>Fill.</documentation></annotation>
      </enumeration>
      <enumeration value="Near">
        <annotation><documentation>Near alignment.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="StripAlignment-i">
    <restriction base="string">
      <enumeration value="Center">
        <annotation><documentation>Center alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Far">
        <annotation><documentation>Far alignment.</documentation></annotation>
      </enumeration>
      <enumeration value="Near">
        <annotation><documentation>Near alignment.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="RepeatPolicy-i">
    <restriction base="string">
      <enumeration value="Always">
        <annotation><documentation>Always repeat the data</documentation></annotation>
      </enumeration>
      <enumeration value="Never">
        <annotation><documentation>Only display the data set once.</documentation></annotation>
      </enumeration>
      <enumeration value="WhenTooBig">
        <annotation><documentation>Repeat the data set if it does NOT fit in the constraint.</documentation></annotation>
      </enumeration>
      <enumeration value="WhenTooSmall">
        <annotation><documentation>Repeat the data set if it DOES fit in the constraint.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="MissingItemPolicy-i">
    <restriction base="string">
      <enumeration value="SizeToAverage">
        <annotation><documentation>Take the average of all items.</documentation></annotation>
      </enumeration>
      <enumeration value="SizeToLargest">
        <annotation><documentation>Assume the size of the largest existing item.</documentation></annotation>
      </enumeration>
      <enumeration value="SizeToSmallest">
        <annotation><documentation>Assume the size of the smallest existing item.</documentation></annotation>
      </enumeration>
      <enumeration value="Wait">
        <annotation><documentation>Stop the flow until this item is available.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="FlowLayout-e">
    <annotation><documentation>A layout that flows items one after another.</documentation></annotation>
    <attribute name="Orientation" type="mcml:Orientation-i" use="optional">
      <annotation><documentation>Layout flow orientation.</documentation></annotation>
    </attribute>
    <attribute name="Spacing" type="mcml:MajorMinor-i" use="optional">
      <annotation><documentation>Specifies the space between items in the flow.</documentation></annotation>
    </attribute>
    <attribute name="AllowWrap" use="optional">
      <annotation><documentation>Enable item wrapping.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="ItemAlignment" type="mcml:ItemAlignment-i" use="optional">
      <annotation><documentation>Specifies the alignment of an item inside the strip.</documentation></annotation>
    </attribute>
    <attribute name="StripAlignment" type="mcml:StripAlignment-i" use="optional">
      <annotation><documentation>Specifies the alignment of a strip.</documentation></annotation>
    </attribute>
    <attribute name="FillStrip" use="optional">
      <annotation><documentation>Take entire strip length.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Repeat" type="mcml:RepeatPolicy-i" use="optional">
      <annotation><documentation>If enabled, this items being flowed will infinitely repeat in either direction, preventing anyone from ever hitting the end of the list.</documentation></annotation>
    </attribute>
    <attribute name="RepeatGap" type="mcml:MajorMinor-i" use="optional">
      <annotation><documentation>When in "repeat" mode, this is the distance between repeated instances.</documentation></annotation>
    </attribute>
    <attribute name="MissingItemPolicy" type="mcml:MissingItemPolicy-i" use="optional">
      <annotation><documentation>What size should the layout assume for missing items?</documentation></annotation>
    </attribute>
    <attribute name="MinimumSampleSize" use="optional">
      <annotation><documentation>What's the minimum amount of available items required before the MissingItemPolicy can be applied. Before we have this many items we will default to the Wait policy.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="HideOffscreenItems" use="optional">
      <annotation><documentation>Should items outside of the visible region be hidden?</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="FormatTransformer-e">
    <annotation><documentation>String format transformer.</documentation></annotation>
    <attribute name="Format" use="optional">
      <annotation><documentation>Format string.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="ExtendedFormat" use="optional">
      <annotation><documentation>Extended format string.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="ToUpper" use="optional">
      <annotation><documentation>Convert result to upper-case.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="ToLower" use="optional">
      <annotation><documentation>Convert result to lower-case.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="FormLayoutInput-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="FormLayoutInput-e">
    <annotation><documentation>FormLayoutInput input.</documentation></annotation>
    <attribute name="Left" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Left anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Top" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Top anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Right" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Right anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Bottom" type="mcml:AnchorEdge-i" use="optional">
      <annotation><documentation>Bottom anchor edge.</documentation></annotation>
    </attribute>
    <attribute name="Horizontal" type="mcml:AnchorAlignment-i" use="optional">
      <annotation><documentation>Horizontal alignment between edge anchors.</documentation></annotation>
    </attribute>
    <attribute name="Vertical" type="mcml:AnchorAlignment-i" use="optional">
      <annotation><documentation>Vertical alignment between edge anchors.</documentation></annotation>
    </attribute>
    <attribute name="ContributesToWidth" type="mcml:AnchorLayoutInput.ContributesToWidth-i" use="optional">
      <annotation><documentation>Contributes to width reported by layout.</documentation></annotation>
    </attribute>
    <attribute name="ContributesToHeight" type="mcml:AnchorLayoutInput.ContributesToHeight-i" use="optional">
      <annotation><documentation>Contributes to height reported by layout.</documentation></annotation>
    </attribute>
    <attribute name="FormLayoutInput" type="mcml:FormLayoutInput-i" use="optional">
      <annotation><documentation>FormLayoutInput inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="GestureInertiaSettings-e">
    <annotation><documentation>Type that defines how a gesture handler should react to inertia.</documentation></annotation>
    <attribute name="Friction" use="optional">
      <annotation><documentation>The friction applied to the velocity during inertia. This value is used to determine how the far the inertia? will move, and how it eases to a rest.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MaximumSpeed" use="optional">
      <annotation><documentation>The maximum</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="GestureRatchetSettings-e">
    <annotation><documentation>Type that defines the ratcheting settings for gestures.</documentation></annotation>
    <attribute name="RatchetEnabled" use="optional">
      <annotation><documentation>Indicates whether there is a valid RatchetSize width or height</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="AutoRatchetEnabled" use="optional">
      <annotation><documentation>Indicates whether there is a valid AutoRatchet size width or height and that Ratcheting is enabled</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="RatchetSize" use="optional">
      <annotation><documentation>The size (width and height) between the ratchet points. The default is (0,0).</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:Size-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="AutoRatchetSize" use="optional">
      <annotation><documentation>The absolute size (width and height) between ratchet points which will cause an automatic ratchet to the next ratchet point.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:Size-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="GesturePanHandler-e">
    <annotation><documentation>Event handler that provides pan gesture tracking behavior to a UI object.</documentation></annotation>
    <attribute name="Offset" use="optional">
      <annotation><documentation>The difference between current position and the initial position when the Pan began.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:Size-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="RatchetOffset" use="optional">
      <annotation><documentation>The difference between current position and the last ratchet starting position.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:Size-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="IsPanning" use="optional">
      <annotation><documentation>Boolean value that indicates whether or not the user is panning</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="IsPanningInertia" use="optional">
      <annotation><documentation>Boolean value that indicates whether or not the user is panning due to inertia</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="PanLockAxis" use="optional">
      <annotation><documentation>Indicates the axis to constrain the pan movements to.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:GesturePanLockAxis-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="CalculatedPanLockAxis" use="optional">
      <annotation><documentation>Indicates the actual axis calculated to constrain the pan movements to.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:GesturePanLockAxis-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ElasticityLeft" use="optional">
      <annotation><documentation>Indicates the the amount of resistant to apply when panning left.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ElasticityRight" use="optional">
      <annotation><documentation>Indicates the the amount of resistant to apply when panning right.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ElasticityUp" use="optional">
      <annotation><documentation>Indicates the the amount of resistant to apply when panning up.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ElasticityDown" use="optional">
      <annotation><documentation>Indicates the the amount of resistant to apply when panning down.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandleDominantAxisOnly" use="optional">
      <annotation><documentation>Indicates whether or not a gesture's dominant axis that match the defined lock axis should be handled.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="GesturePanLockAxis-i">
    <restriction base="string">
      <enumeration value="Dominant">
        <annotation><documentation>Which ever axis had the most movement when the pan gesture begins.</documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation>Neither axis.</documentation></annotation>
      </enumeration>
      <enumeration value="X">
        <annotation><documentation>X axis.</documentation></annotation>
      </enumeration>
      <enumeration value="Y">
        <annotation><documentation>Y axis.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Graphic-e">
    <annotation><documentation>Visual primitive used for displaying an Image.</documentation></annotation>
    <all>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="IsAcquired" use="optional">
      <annotation><documentation>Indicates whether the image has been acquired or not.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Content" type="mcml:Image-i" use="optional">
      <annotation><documentation>The image to display.</documentation></annotation>
    </attribute>
    <attribute name="AcquiringImage" type="mcml:Image-i" use="optional">
      <annotation><documentation>An image to display in place of an image that is being acquired asynchronously.</documentation></annotation>
    </attribute>
    <attribute name="ErrorImage" type="mcml:Image-i" use="optional">
      <annotation><documentation>An image to display in place of an image that failed to acquire.</documentation></annotation>
    </attribute>
    <attribute name="MaintainAspectRatio" use="optional">
      <annotation><documentation>Maintain relative width and height ratio when displaying.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="SizingPolicy" use="optional">
      <annotation><documentation>Instructs to size self based on contents.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:SizingPolicy-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HorizontalAlignment" type="mcml:ItemAlignment-i" use="optional">
      <annotation><documentation>The horizontal alignment of the content image within the layout rectangle.</documentation></annotation>
    </attribute>
    <attribute name="VerticalAlignment" type="mcml:ItemAlignment-i" use="optional">
      <annotation><documentation>The vertical alignment of the content image within the layout rectangle.</documentation></annotation>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="GridLayout-e">
    <annotation><documentation>Virtual flow that enables layout of virtualized content. Supports item reference sizes to allocate room for content that is not yet available.</documentation></annotation>
    <attribute name="Orientation" type="mcml:Orientation-i" use="optional">
      <annotation><documentation>Layout flow orientation.</documentation></annotation>
    </attribute>
    <attribute name="AllowWrap" use="optional">
      <annotation><documentation>Allow wrapping.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="ReferenceSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size of an individual item.</documentation></annotation>
    </attribute>
    <attribute name="Rows" use="optional">
      <annotation><documentation>The set number of rows for this grid.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Columns" use="optional">
      <annotation><documentation>The set number of columns for this grid.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Spacing" type="mcml:Size-i" use="optional">
      <annotation><documentation>Spacing between each item in the flow.</documentation></annotation>
    </attribute>
    <attribute name="MajorAlignment" type="mcml:ItemAlignment-i" use="optional">
      <annotation><documentation>Alignment within the ReferenceSize along the major axis.</documentation></annotation>
    </attribute>
    <attribute name="MinorAlignment" type="mcml:ItemAlignment-i" use="optional">
      <annotation><documentation>Alignment for items within the Referencesize along the minor axis.</documentation></annotation>
    </attribute>
    <attribute name="Repeat" type="mcml:RepeatPolicy-i" use="optional">
      <annotation><documentation>If enabled, this items being flowed will infinitely repeat in either direction, preventing anyone from ever hitting the end of the list.</documentation></annotation>
    </attribute>
    <attribute name="RepeatGap" use="optional">
      <annotation><documentation>When in "repeat" mode, this is the distance between repeated instances.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="HandleException-e">
    <annotation><documentation>HandleException.</documentation></annotation>
    <attribute name="ExceptionHandler" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>ExceptionHandler.</documentation></annotation>
    </attribute>
    <attribute name="ExceptionType" use="optional">
      <annotation><documentation>ExceptionType.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="HorizontalAlignment-i">
    <restriction base="string">
      <enumeration value="Center">
        <annotation><documentation>Center aligned.</documentation></annotation>
      </enumeration>
      <enumeration value="Far">
        <annotation><documentation>Far aligned.</documentation></annotation>
      </enumeration>
      <enumeration value="Near">
        <annotation><documentation>Near aligned.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Host-e">
    <annotation><documentation>Visual primitive used for hosting a UI.</documentation></annotation>
    <all>
      <element name="Errors" minOccurs="0">
        <annotation><documentation>List of reported errors (string type) if the Source failed to load.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="Source" use="optional">
      <annotation><documentation>Prefixed name or uri of UI to create and host.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Status" use="optional">
      <annotation><documentation>The load status of the current Source.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="InputEnabled" use="optional">
      <annotation><documentation>Should the hosted UI be input enabled?</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ThrowOnLoadError" use="optional">
      <annotation><documentation>Throw on failure to load Source.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
    <anyAttribute processContents="lax" namespace="##any"/>
  </complexType>

  <simpleType name="IAnimationProvider-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^(animation|color|font|global|image|sound)://(.+):(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="IAnimationProvider-e">
    <choice minOccurs="1" maxOccurs="1">
      <element name="Animation" type="mcml:Animation-e"/>
      <element name="MergeAnimation" type="mcml:MergeAnimation-e"/>
      <element name="SwitchAnimation" type="mcml:SwitchAnimation-e"/>
      <element name="TransformAnimation" type="mcml:TransformAnimation-e"/>
      <element name="TransformByAttributeAnimation" type="mcml:TransformByAttributeAnimation-e"/>
    </choice>
  </complexType>

  <simpleType name="ImageRequirements-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ImageRequirements-e">
    <annotation><documentation>Requirements for an image during loading.</documentation></annotation>
    <attribute name="ImageRequirements" type="mcml:ImageRequirements-i" use="optional">
      <annotation><documentation>ImageRequirements inline construction.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="IModelItem-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="IModelItem-e">
    <choice minOccurs="1" maxOccurs="1">
      <element name="ArrayListDataSet" type="mcml:ArrayListDataSet-e"/>
      <element name="BooleanChoice" type="mcml:BooleanChoice-e"/>
      <element name="ByteRangedValue" type="mcml:ByteRangedValue-e"/>
      <element name="Choice" type="mcml:Choice-e"/>
      <element name="Command" type="mcml:Command-e"/>
      <element name="EditableText" type="mcml:EditableText-e"/>
      <element name="ListDataSet" type="mcml:ListDataSet-e"/>
      <element name="IntRangedValue" type="mcml:IntRangedValue-e"/>
      <element name="ModelItem" type="mcml:ModelItem-e"/>
      <element name="RangedValue" type="mcml:RangedValue-e"/>
      <element name="VirtualList" type="mcml:VirtualList-e"/>
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <simpleType name="IModelItem.Description-i">
    <restriction base="string"/>
  </simpleType>

  <simpleType name="IModelItem.Selected-i">
    <restriction base="mcml:BooleanI-i"/>
  </simpleType>

  <simpleType name="IModelItem.UniqueId-i">
    <restriction base="string"/>
  </simpleType>

  <simpleType name="Index-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Index-e">
    <annotation><documentation>Visual primitive used for repeating a markup based on a supplied dataset.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>This is the integer index value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="SourceValue" use="optional">
      <annotation><documentation>This is the integer index value that can be used to index into a data source.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Index" type="mcml:Index-i" use="optional">
      <annotation><documentation>Index inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="InputHandlerStage-i">
    <restriction base="string">
      <enumeration value="Bubbled">
        <annotation><documentation>Event will be processed when it is traveling from the destination.</documentation></annotation>
      </enumeration>
      <enumeration value="Direct">
        <annotation><documentation>Event will be processed when it arrives at the destination.</documentation></annotation>
      </enumeration>
      <enumeration value="Routed">
        <annotation><documentation>Event will be processed when it is traveling to the destination.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="IntRangedValue-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="IntRangedValue-e">
    <annotation><documentation>An integer number value with a minimum and maximum value.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Current value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MinValue" use="optional">
      <annotation><documentation>Minimum value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MaxValue" use="optional">
      <annotation><documentation>Maximum value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Step" use="optional">
      <annotation><documentation>Increment/decrememt value when NextValue()/PreviousValue() is used.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="IntRangedValue" type="mcml:IntRangedValue-i" use="optional">
      <annotation><documentation>IntRangedValue inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="InvokePolicy-i">
    <restriction base="string">
      <enumeration value="AsynchronousLowPri">
        <annotation><documentation>Invoke asynchronously at Low priority.</documentation></annotation>
      </enumeration>
      <enumeration value="AsynchronousNormal">
        <annotation><documentation>Invoke asynchronously at Normal priority.</documentation></annotation>
      </enumeration>
      <enumeration value="Synchronous">
        <annotation><documentation>Invoke synchronously.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="Invoke-e">
    <annotation><documentation>Invoke action.</documentation></annotation>
    <all>
      <element name="Transformer" type="mcml:ITransformer-e" minOccurs="0">
        <annotation><documentation>Transforms the result value before it's set on the ResultTarget.</documentation></annotation>
      </element>
      <element name="HandleExceptions" minOccurs="0">
        <annotation><documentation>Exception Handlers.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
    </all>
    <attribute name="ResultTarget" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Location to store result.</documentation></annotation>
    </attribute>
    <attribute name="Transformer" type="mcml:ITransformer-i" use="optional">
      <annotation><documentation>Transforms the result value before it's set on the ResultTarget.</documentation></annotation>
    </attribute>
    <attribute name="InvokePolicy" type="mcml:InvokePolicy-i" use="optional">
      <annotation><documentation>Invoke target synchronously, async at normal priority, or async at low priority (default is asynchronous at normal priority).</documentation></annotation>
    </attribute>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Action target.</documentation></annotation>
    </attribute>
    <attribute name="ExclusiveApply" type="mcml:Action.ExclusiveApply-i" use="optional">
      <annotation><documentation>Specifies if should continue applying actions to this target after an application by this action.</documentation></annotation>
    </attribute>
    <anyAttribute processContents="lax" namespace="##any"/>
  </complexType>

  <simpleType name="Action.ExclusiveApply-i">
    <restriction base="mcml:BooleanI-i"/>
  </simpleType>

  <complexType name="InvokeCommand-e">
    <annotation><documentation>A Command that enables invoke of an arbitrary method.</documentation></annotation>
    <all>
      <element name="HandleExceptions" minOccurs="0">
        <annotation><documentation>Exception Handlers.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
      <element name="Transformer" type="mcml:ITransformer-e" minOccurs="0">
        <annotation><documentation>Transforms the result value before it's set on the ResultTarget.</documentation></annotation>
      </element>
    </all>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Method to invoke.</documentation></annotation>
    </attribute>
    <attribute name="ResultTarget" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Location to store result.</documentation></annotation>
    </attribute>
    <attribute name="Transformer" type="mcml:ITransformer-i" use="optional">
      <annotation><documentation>Transforms the result value before it's set on the ResultTarget.</documentation></annotation>
    </attribute>
    <attribute name="Available" type="mcml:Command.Available-i" use="optional">
      <annotation><documentation>Command availability.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
    <anyAttribute processContents="lax" namespace="##any"/>
  </complexType>

  <complexType name="IsNotType-e">
    <annotation><documentation>IsNotType condition.</documentation></annotation>
    <attribute name="Type" type="mcml:IsType.Type-i" use="optional">
      <annotation><documentation>Type to check against.</documentation></annotation>
    </attribute>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="IsType.Type-i">
    <restriction base="string"/>
  </simpleType>

  <complexType name="IsNotValid-e">
    <annotation><documentation>IsNotValid condition.</documentation></annotation>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="IsType-e">
    <annotation><documentation>IsType condition.</documentation></annotation>
    <attribute name="Type" type="mcml:IsType.Type-i" use="optional">
      <annotation><documentation>Type to check against.</documentation></annotation>
    </attribute>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="IsValid-e">
    <annotation><documentation>IsValid condition.</documentation></annotation>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ITransformerEx-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ITransformerEx-e">
    <annotation><documentation>Data transformation with pre-transform support.</documentation></annotation>
    <attribute name="ITransformerEx" type="mcml:ITransformerEx-i" use="optional">
      <annotation><documentation>ITransformerEx inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="IValueRange-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="IValueRange-e">
    <choice minOccurs="1" maxOccurs="1">
      <element name="Choice" type="mcml:Choice-e"/>
      <element name="RangedValue" type="mcml:RangedValue-e"/>
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <simpleType name="KeyframeFilter-i">
    <restriction base="string">
      <enumeration value="All">
        <annotation><documentation>Include all keyframes.</documentation></annotation>
      </enumeration>
      <enumeration value="Alpha">
        <annotation><documentation>Include AlphaKeyframes.</documentation></annotation>
      </enumeration>
      <enumeration value="Color">
        <annotation><documentation>Include ColorKeyframes.</documentation></annotation>
      </enumeration>
      <enumeration value="Position">
        <annotation><documentation>Include PositionKeyframes.</documentation></annotation>
      </enumeration>
      <enumeration value="Rotate">
        <annotation><documentation>Include RotateKeyframes.</documentation></annotation>
      </enumeration>
      <enumeration value="Scale">
        <annotation><documentation>Include ScaleKeyframes.</documentation></annotation>
      </enumeration>
      <enumeration value="Size">
        <annotation><documentation>Include SizeKeyframes.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="KeyHandler-e">
    <annotation><documentation>Event handler that provides key-press input behavior to a UI object.</documentation></annotation>
    <attribute name="Pressing" use="optional">
      <annotation><documentation>Boolean value indicating whether or not the key is currently being pressed.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Key" use="optional">
      <annotation><documentation>Key to handle events for.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:KeyHandlerKey-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Modifiers" use="optional">
      <annotation><documentation>Modifier that must be pressed along with the key to invoke the command associated with the key handler.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:KeyHandlerModifiers-i"/>
          </simpleType>
          <simpleType>
            <restriction base="string">
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Command" type="mcml:ICommand-i" use="optional">
      <annotation><documentation>Command associated with the key handler. The invoke method for the command will be called when a key-press event occurs.</documentation></annotation>
    </attribute>
    <attribute name="Handle" use="optional">
      <annotation><documentation>Boolean flag indicating whether or not the key handler will allow the event to pass on to other event handlers after it handles the event.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Repeat" use="optional">
      <annotation><documentation>Boolean flag indicating whether or not the key handler will be invoked multiple times when the key is held down.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="KeyHandlerKey-i">
    <restriction base="string">
      <enumeration value="A">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Add">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Any">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="B">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Backslash">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Backspace">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="C">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="CapsLock">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="CloseBrace">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Comma">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Control">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D0">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D1">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D2">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D3">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D4">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D5">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D6">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D7">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D8">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="D9">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Delete">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Divide">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Down">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="E">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="End">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Enter">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Equals">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Escape">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F1">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F10">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F11">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F12">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F13">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F14">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F15">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F16">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F17">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F18">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F19">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F2">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F20">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F21">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F22">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F23">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F24">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F3">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F4">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F5">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F6">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F7">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F8">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="F9">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="G">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="H">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Home">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="I">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Insert">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="J">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="K">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="L">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Left">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="M">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Multiply">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="N">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumLock">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad0">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad1">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad2">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad3">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad4">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad5">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad6">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad7">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad8">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="NumPad9">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="O">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OpenBrace">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="P">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PageDown">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PageUp">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Period">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Pipe">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PrintScreen">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Q">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="QuestionMark">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Quotes">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="R">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Right">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="S">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Semicolon">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Shift">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Space">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Subtract">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="T">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Tilde">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="U">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Underscore">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Up">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="V">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="W">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="X">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Y">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Z">
        <annotation><documentation></documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="KeyHandlerModifiers-i">
    <restriction base="string">
      <enumeration value="Alt">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Control">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Shift">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Windows">
        <annotation><documentation></documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="ListDataSet-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ListDataSet-e">
    <annotation><documentation>Class for creating "live" (changing) data collections. Wraps and manipulates a provided IList.</documentation></annotation>
    <all>
      <element name="Source" type="mcml:ListDataSet.Source-e" minOccurs="0">
        <annotation><documentation>The underlying source IList that is used to populate the data.</documentation></annotation>
      </element>
    </all>
    <attribute name="Source" type="mcml:ListDataSet.Source-i" use="optional">
      <annotation><documentation>The underlying source IList that is used to populate the data.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="ListDataSet" type="mcml:ListDataSet-i" use="optional">
      <annotation><documentation>ListDataSet inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="MathTransformer-e">
    <annotation><documentation>Math transformer.</documentation></annotation>
    <attribute name="Add" use="optional">
      <annotation><documentation>Add float value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="AddInt" use="optional">
      <annotation><documentation>Add int value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Subtract" use="optional">
      <annotation><documentation>Subtract float value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="SubtractInt" use="optional">
      <annotation><documentation>Subtract int value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Multiply" use="optional">
      <annotation><documentation>Multiply float value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="MultiplyInt" use="optional">
      <annotation><documentation>Multiply int value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Divide" use="optional">
      <annotation><documentation>Divide float value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="DivideInt" use="optional">
      <annotation><documentation>Divide int value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Mod" use="optional">
      <annotation><documentation>Modulo float value.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="ModInt" use="optional">
      <annotation><documentation>Modulo int value.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Absolute" use="optional">
      <annotation><documentation>Absolute value.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Sign" use="optional">
      <annotation><documentation>Sign of value.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Type" use="optional">
      <annotation><documentation>Force the return type.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <element name="Mcml" type="mcml:Mcml-e"/>

  <complexType name="Mcml-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="UI" type="mcml:UI-e"/>
      <element name="Aggregate" type="mcml:Aggregate-e"/>
      <element name="Animation" type="mcml:Animation-e"/>
      <element name="Color" type="mcml:Color-e"/>
      <element name="Font" type="mcml:Font-e"/>
      <element name="Image" type="mcml:Image-e"/>
      <element name="Inset" type="mcml:Inset-e"/>
      <element name="MajorMinor" type="mcml:MajorMinor-e"/>
      <element name="Point" type="mcml:Point-e"/>
      <element name="Rectangle" type="mcml:Rectangle-e"/>
      <element name="Rotation" type="mcml:Rotation-e"/>
      <element name="Size" type="mcml:Size-e"/>
      <element name="Sound" type="mcml:Sound-e"/>
      <element name="Vector3" type="mcml:Vector3-e"/>
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <complexType name="MergeAnimation-e">
    <annotation><documentation>MergeAnimation</documentation></annotation>
    <all>
      <element name="Sources" minOccurs="0">
        <annotation><documentation>The list of IAnimationProviders that will be merged together.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="Animation" type="mcml:Animation-e"/>
          <element name="TransformAnimation" type="mcml:TransformAnimation-e"/>
          <element name="TransformByAttributeAnimation" type="mcml:TransformByAttributeAnimation-e"/>
          <element name="MergeAnimation" type="mcml:MergeAnimation-e"/>
        </choice>
      </complexType>
      </element>
    </all>
    <attribute name="Type" type="mcml:AnimationEventType-i" use="optional">
      <annotation><documentation>Type of event that this animation will respond to.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="MetadataVisibility-i">
    <restriction base="string">
      <enumeration value="Always">
        <annotation><documentation>Always show extended metadata.</documentation></annotation>
      </enumeration>
      <enumeration value="Default">
        <annotation><documentation>Default behavior (same as 'OnFocus').</documentation></annotation>
      </enumeration>
      <enumeration value="Never">
        <annotation><documentation>Never show extended metadata.</documentation></annotation>
      </enumeration>
      <enumeration value="OnFocus">
        <annotation><documentation>Only show extended metadata when containing UI gains focus.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="ModelItem-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ModelItem-e">
    <annotation><documentation>Main base object in which code-behind and data constructs are built. ModelItems have "owners" that are tasked with disposal of their ModelItems.</documentation></annotation>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="ModelItem" type="mcml:ModelItem-i" use="optional">
      <annotation><documentation>ModelItem inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Modified-e">
    <annotation><documentation>Modified condition.</documentation></annotation>
    <attribute name="InitialEvaluate" use="optional">
      <annotation><documentation>Initial evaluation value during startup.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>The Source of the condition.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="MouseWheelHandler-e">
    <annotation><documentation>Event handler that provides mouse wheel input behavior to a UI object.</documentation></annotation>
    <attribute name="Handle" use="optional">
      <annotation><documentation>Boolean flag indicating whether or not the mouse wheel handler will allow the event to pass on to other event handlers after it handles the event.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Navigate-e">
    <annotation><documentation>Navigate action.</documentation></annotation>
    <all>
      <element name="Data" minOccurs="0">
        <annotation><documentation>Additional data for the Uri request.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
    </all>
    <attribute name="Source" use="optional">
      <annotation><documentation>Mcml Uri to navigate to.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <anyAttribute processContents="lax" namespace="##any"/>
  </complexType>

  <complexType name="NavigateCommand-e">
    <annotation><documentation>Navigate to the specified destination Mcml resource.</documentation></annotation>
    <attribute name="Source" use="optional">
      <annotation><documentation>Mcml Uri to navigate to.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Available" type="mcml:Command.Available-i" use="optional">
      <annotation><documentation>Command availability.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
    <anyAttribute processContents="lax" namespace="##any"/>
  </complexType>

  <simpleType name="NavigationPolicies-i">
    <restriction base="string">
      <enumeration value="Column">
        <annotation><documentation>Creates a Group that has single-column vertical arrangement. Navigations up or down will compare Y positions. Navigations left and right will exit the group.</documentation></annotation>
      </enumeration>
      <enumeration value="ContainAll">
        <annotation><documentation>Shorthand for both ContainDirectional and ContainTabOrder. No navigations of any kind will leave this container.</documentation></annotation>
      </enumeration>
      <enumeration value="ContainDirectional">
        <annotation><documentation>Shorthand for both ContainVertical and ContainHorizontal. Directional navigations will not leave this container.</documentation></annotation>
      </enumeration>
      <enumeration value="ContainHorizontal">
        <annotation><documentation>Creates a Group that contains navigations horizontally. Navigations to the left or right will not leave this container. Implicitly creates a Group.</documentation></annotation>
      </enumeration>
      <enumeration value="ContainTabOrder">
        <annotation><documentation>Creates a Group that contains tab order. Navigations previous or next will not leave this container.</documentation></annotation>
      </enumeration>
      <enumeration value="ContainVertical">
        <annotation><documentation>Creates a Group that contains navigations vertically. Navigations upward or downward will not leave this container.</documentation></annotation>
      </enumeration>
      <enumeration value="FlowHorizontal">
        <annotation><documentation>Provide a hint to the navigation system that this item is flowed out into rows. When navigating within this item, the navigation system will automatically group the child items into horizontal strips. NOTE: It assumes all items within a single row are of a uniform height.</documentation></annotation>
      </enumeration>
      <enumeration value="FlowVertical">
        <annotation><documentation>Provide a hint to the navigation system that this item is flowed out into columns. When navigating within this item, the navigation system will automatically group the child items into vertical strips.  NOTE: It assumes all items within a single column are of a uniform width.</documentation></annotation>
      </enumeration>
      <enumeration value="Group">
        <annotation><documentation>Overrides the default navigation behavior by defining this container as a logical group of items. Where possible, focus navigations prefer items in the same Group over items in different Groups.</documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation>Default. The navigation system will decide how to group items.</documentation></annotation>
      </enumeration>
      <enumeration value="PreferFocusOrder">
        <annotation><documentation>Creates a Group that always wants to use focus order rather than spatial location to determine who should receive focus when entering the group. Navigations into the group will prefer the child with the lowest focus order unless the container is also a sticky focus container and has a saved focus.</documentation></annotation>
      </enumeration>
      <enumeration value="RememberFocus">
        <annotation><documentation>Creates a Group that remembers its most recent focus. Future navigations returning focus to the group will automatically restore the prior focus.</documentation></annotation>
      </enumeration>
      <enumeration value="Row">
        <annotation><documentation>Creates a Group that has single-row horizontal arrangement. Navigations left or right will compare X positions. Navigations up and down will exit the group.</documentation></annotation>
      </enumeration>
      <enumeration value="TabGroup">
        <annotation><documentation>Creates a Group that functions as a logical tabstop. Tab order navigations from within this Group will immediately leave for another tabstop.</documentation></annotation>
      </enumeration>
      <enumeration value="WrapAll">
        <annotation><documentation>Shorthand for both WrapDirectional and WrapTabOrder. Any navigations that would leave this container will "wrap" to the other end of the container.</documentation></annotation>
      </enumeration>
      <enumeration value="WrapDirectional">
        <annotation><documentation>Shorthand for both WrapVertical and WrapHorizontal. Directional navigations that would leave this container will "wrap" to the other end of the container.</documentation></annotation>
      </enumeration>
      <enumeration value="WrapHorizontal">
        <annotation><documentation>Creates a Group that wraps horizontally. Navigations left or right that would leave this container will instead "wrap" to the other end of the container.</documentation></annotation>
      </enumeration>
      <enumeration value="WrapTabOrder">
        <annotation><documentation>Creates a Group that wraps in tab order. Navigations previous or next that would leave this container will instead "wrap" to the other end of the container.</documentation></annotation>
      </enumeration>
      <enumeration value="WrapVertical">
        <annotation><documentation>Creates a Group that wraps vertically. Navigations up or down that would leave this container will instead "wrap" to the other end of the container.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="NowPlaying-e">
    <annotation><documentation>Placeholder item used for indicating where the Now Playing inset should be displayed.</documentation></annotation>
    <attribute name="IsActive" use="optional">
      <annotation><documentation>Indicates whether there is currently an active now-playing inset.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ShowFullMetadata" use="optional">
      <annotation><documentation>Metadata display policy.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:MetadataVisibility-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="SnapToDefaultPosition" use="optional">
      <annotation><documentation>Determines whether the Pip should snap to it's default location, If set to true and the pip was laid out to a position close to its then the pip will be placed in its default position</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the Now Playing inset.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the Now Playing inset will allow itself to be displayed</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Panel-e">
    <annotation><documentation>Visual primitive used as a non-drawing layout container.</documentation></annotation>
    <all>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="PlayAnimation-e">
    <annotation><documentation>Play animation action.</documentation></annotation>
    <all>
      <element name="Animation" type="mcml:IAnimationProvider-e" minOccurs="0">
        <annotation><documentation>Animation to play.</documentation></annotation>
      </element>
    </all>
    <attribute name="Animation" type="mcml:IAnimationProvider-i" use="optional">
      <annotation><documentation>Animation to play.</documentation></annotation>
    </attribute>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Action target.</documentation></annotation>
    </attribute>
    <attribute name="ExclusiveApply" type="mcml:Action.ExclusiveApply-i" use="optional">
      <annotation><documentation>Specifies if should continue applying actions to this target after an application by this action.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="PlaySound-e">
    <annotation><documentation>Play sound action.</documentation></annotation>
    <attribute name="Sound" use="optional">
      <annotation><documentation>Sound to play.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="Point-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Point-e">
    <annotation><documentation>Point object.</documentation></annotation>
    <attribute name="X" use="optional">
      <annotation><documentation>Point X.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Y" use="optional">
      <annotation><documentation>Point Y.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Point" type="mcml:Point-i" use="optional">
      <annotation><documentation>Point inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="PositionKeyframe-e">
    <annotation><documentation>Position keyframe.</documentation></annotation>
    <attribute name="Value" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Keyframe value.</documentation></annotation>
    </attribute>
    <attribute name="Time" type="mcml:BaseKeyframe.Time-i" use="optional">
      <annotation><documentation>Time that this key frame occurs at.</documentation></annotation>
    </attribute>
    <attribute name="RelativeTo" type="mcml:KeyframeValueReference-i" use="optional">
      <annotation><documentation>Specifies how to interpret the keyframe's value.</documentation></annotation>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation from this keyframe to the next.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="PropertySet-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="PropertySet-e">
    <annotation><documentation>A arbitrary collection of property values.</documentation></annotation>
    <all>
      <element name="Entries" minOccurs="0">
        <annotation><documentation>Set of properties and their values.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <any processContents="lax" namespace="##other"/>
        </choice>
      </complexType>
      </element>
    </all>
    <attribute name="Entries" use="optional">
      <annotation><documentation>Set of properties and their values.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="PropertySet" type="mcml:PropertySet-i" use="optional">
      <annotation><documentation>PropertySet inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="RangedValue-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="RangedValue-e">
    <annotation><documentation>A number value with a minimum and maximum value.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Current value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MinValue" use="optional">
      <annotation><documentation>Minimum value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MaxValue" use="optional">
      <annotation><documentation>Maximum value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Step" use="optional">
      <annotation><documentation>Increment/decrememt value when NextValue()/PreviousValue() is used.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="RangedValue" type="mcml:RangedValue-i" use="optional">
      <annotation><documentation>RangedValue inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Rectangle-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*,[ \t]*[-]?[0-9]+[ \t]*,$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Rectangle-e">
    <annotation><documentation>Rectangle object.</documentation></annotation>
    <attribute name="X" use="optional">
      <annotation><documentation>Rectangle X.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Y" use="optional">
      <annotation><documentation>Rectangle Y.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Width" use="optional">
      <annotation><documentation>Rectangle Width.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Height" use="optional">
      <annotation><documentation>Rectangle Height.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Rectangle" type="mcml:Rectangle-i" use="optional">
      <annotation><documentation>Rectangle inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="RelativeEdge-i">
    <restriction base="string">
      <enumeration value="Far">
        <annotation><documentation>The Far end (right/bottom)</documentation></annotation>
      </enumeration>
      <enumeration value="Near">
        <annotation><documentation>The Near end (left/top)</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="ViewItem-e">
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="Clip" type="mcml:Clip-e"/>
      <element name="ColorFill" type="mcml:ColorFill-e"/>
      <element name="Graphic" type="mcml:Graphic-e"/>
      <element name="Host" type="mcml:Host-e"/>
      <element name="NowPlaying" type="mcml:NowPlaying-e"/>
      <element name="Repeater" type="mcml:Repeater-e"/>
      <element name="Scroller" type="mcml:Scroller-e"/>
      <element name="Panel" type="mcml:Panel-e"/>
      <element name="Text" type="mcml:Text-e"/>
      <element name="Video" type="mcml:Video-e"/>
      <any processContents="lax" namespace="##other"/>
    </choice>
  </complexType>

  <complexType name="Repeater-e">
    <annotation><documentation>Visual primitive used for repeating a markup based on a supplied dataset.</documentation></annotation>
    <all>
      <element name="Content" type="mcml:ViewItem-e" minOccurs="0">
        <annotation><documentation>The visual content to repeat. Content is the root of a tree of visual primitives.</documentation></annotation>
      </element>
      <element name="Divider" type="mcml:ViewItem-e" minOccurs="0">
        <annotation><documentation>The visual content to insert between repeated items. Divider is the root of a tree of visual primitives.</documentation></annotation>
      </element>
      <element name="Source" minOccurs="0">
        <annotation><documentation>Data to repeat.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <any processContents="lax" namespace="##other"/>
        </choice>
      </complexType>
      </element>
      <element name="ContentSelectors" minOccurs="0">
        <annotation><documentation>List of content selectors for non-homogeneous repeating.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="TypeSelector" type="mcml:TypeSelector-e"/>
          <element name="ValueSelector" type="mcml:ValueSelector-e"/>
        </choice>
      </complexType>
      </element>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="ContentName" use="optional">
      <annotation><documentation>Visual content to repeat (non-inline form). Content comes from a named Content tag.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="DividerName" use="optional">
      <annotation><documentation>Visual content to insert between repeated items (non-inline form). Divider comes from a named Content tag.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Source" use="optional">
      <annotation><documentation>Data to repeat.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="DiscardOffscreenVisuals" use="optional">
      <annotation><documentation>Throw away visuals that go offscreen.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="DefaultFocusIndex" use="optional">
      <annotation><documentation>The item that should be given a preferential focus order when repeated. Setting this property does not force the specified item to be repeated.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ResourceGroup-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ResourceGroup-e">
    <annotation><documentation>A grouping of Image and Sound resources for coordinating acquisition.</documentation></annotation>
    <all>
      <element name="Resources" minOccurs="0">
        <annotation><documentation>Set of Images or Sounds.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="Image" type="mcml:Image-e"/>
          <element name="Sound" type="mcml:Sound-e"/>
          <any processContents="lax" namespace="##other"/>
        </choice>
      </complexType>
      </element>
    </all>
    <attribute name="Resources" use="optional">
      <annotation><documentation>Set of Images or Sounds.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="AcquisitionStatus" use="optional">
      <annotation><documentation>Current status of group.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="ResourceGroup" type="mcml:ResourceGroup-i" use="optional">
      <annotation><documentation>ResourceGroup inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="RotateKeyframe-e">
    <annotation><documentation>Rotate keyframe.</documentation></annotation>
    <attribute name="Value" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation value.</documentation></annotation>
    </attribute>
    <attribute name="Time" type="mcml:BaseKeyframe.Time-i" use="optional">
      <annotation><documentation>Time that this key frame occurs at.</documentation></annotation>
    </attribute>
    <attribute name="RelativeTo" type="mcml:KeyframeValueReference-i" use="optional">
      <annotation><documentation>Specifies how to interpret the keyframe's value.</documentation></annotation>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation from this keyframe to the next.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="RotateLayout-e">
    <annotation><documentation>RotateLayout enables 0, 90, 180, or 270 degree rotations of children.</documentation></annotation>
    <attribute name="AngleDegrees" use="optional">
      <annotation><documentation>0, 90, 180, or 270 degree rotation.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="Rule-e">
    <annotation><documentation>The base Rule of all other "convenience" Rules. Allows for manual construction of custom lists of Conditions and Actions.</documentation></annotation>
    <all>
      <element name="Conditions" type="mcml:Rule.Conditions-e" minOccurs="0">
        <annotation><documentation>List of Conditions of this Rule.</documentation></annotation>
      </element>
      <element name="Actions" type="mcml:Rule.Actions-e" minOccurs="0">
        <annotation><documentation>List of Actions of this Rule.</documentation></annotation>
      </element>
    </all>
    <attribute name="ConditionLogicalOp" type="mcml:ConditionLogicalOp-i" use="optional">
      <annotation><documentation>Rule matching behavior (AND'd or OR'd with peer Rules).</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ScaleKeyframe-e">
    <annotation><documentation>Scale keyframe.</documentation></annotation>
    <attribute name="Value" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Keyframe value.</documentation></annotation>
    </attribute>
    <attribute name="Time" type="mcml:BaseKeyframe.Time-i" use="optional">
      <annotation><documentation>Time that this key frame occurs at.</documentation></annotation>
    </attribute>
    <attribute name="RelativeTo" type="mcml:KeyframeValueReference-i" use="optional">
      <annotation><documentation>Specifies how to interpret the keyframe's value.</documentation></annotation>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation from this keyframe to the next.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ScaleLayout-e">
    <annotation><documentation>Scale layout scales children up or down to the constraint.</documentation></annotation>
    <attribute name="AllowScaleUp" use="optional">
      <annotation><documentation>Specifies if should scale up small content to fit the contraint.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="AllowScaleDown" use="optional">
      <annotation><documentation>Specifies if should scale down large content to fit the contraint.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="MaintainAspectRatio" use="optional">
      <annotation><documentation>Specifies if should scale X and Y equally.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="Scroller-e">
    <annotation><documentation>Visual primitive used for scrolling content.</documentation></annotation>
    <all>
      <element name="ScrollingData" minOccurs="0">
        <annotation><documentation>Definition scroller configuration.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="1">
          <element name="ScrollingData" type="mcml:ScrollingData-e"/>
        </choice>
      </complexType>
      </element>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="ScrollingData" use="optional">
      <annotation><documentation>Definition scroller configuration.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="FocusPadding" use="optional">
      <annotation><documentation>The amount of space around the focus area to ensure it is in view.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Prefetch" use="optional">
      <annotation><documentation>Amount of area beyond the visible scrolling area to have content ready.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Orientation" type="mcml:Clip.Orientation-i" use="optional">
      <annotation><documentation>The orientation of the clipping fade.</documentation></annotation>
    </attribute>
    <attribute name="FadeSize" type="mcml:Clip.FadeSize-i" use="optional">
      <annotation><documentation>The size of the clip fade.</documentation></annotation>
    </attribute>
    <attribute name="FarOffset" type="mcml:Clip.FarOffset-i" use="optional">
      <annotation><documentation>The offset for the far edge of the gradient (dependent on the orientation).</documentation></annotation>
    </attribute>
    <attribute name="NearOffset" type="mcml:Clip.NearOffset-i" use="optional">
      <annotation><documentation>The offset for the near edge of the gradient (dependent on the orientation).</documentation></annotation>
    </attribute>
    <attribute name="ShowNear" type="mcml:Clip.ShowNear-i" use="optional">
      <annotation><documentation>Toggle of the near fade.</documentation></annotation>
    </attribute>
    <attribute name="ShowFar" type="mcml:Clip.ShowFar-i" use="optional">
      <annotation><documentation>Toggle of the far fade.</documentation></annotation>
    </attribute>
    <attribute name="ColorMask" type="mcml:Color-i" use="optional">
      <annotation><documentation>Defines what sort of effect the fade will have. By default it is an alpha fade.</documentation></annotation>
    </attribute>
    <attribute name="FadeAmount" type="mcml:Clip.FadeAmount-i" use="optional">
      <annotation><documentation>Defines the "severity" of the fade.</documentation></annotation>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ScrollingData-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="ScrollingData-e">
    <annotation><documentation>Scrolling state and configuration.</documentation></annotation>
    <attribute name="ScrollStep" use="optional">
      <annotation><documentation>Size of a single scroll step.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="PageStep" use="optional">
      <annotation><documentation>Percentage of a page to scroll when using PageUp/PageDown.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="PageSizedScrollStep" use="optional">
      <annotation><documentation>When scrolling, scroll a page at a time.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="BeginPadding" use="optional">
      <annotation><documentation>Amount of space around the beginning focus area to ensure it is in view.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="EndPadding" use="optional">
      <annotation><documentation>Amount of space around the end of the focus area to ensure it is in view.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="BeginPaddingRelativeTo" use="optional">
      <annotation><documentation>This value determines what end BeginPadding is relative to.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:RelativeEdge-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="EndPaddingRelativeTo" use="optional">
      <annotation><documentation>This value determines what end EndPadding is relative to.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:RelativeEdge-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="LockedPosition" use="optional">
      <annotation><documentation>Percentage position within the viewing area that the focus will be locked to.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="LockedAlignment" use="optional">
      <annotation><documentation>Percentage of the focus rectangle to use when in LockedPosition mode.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Repeater" use="optional">
      <annotation><documentation>Target Repeater for focused-based keyboard supported scrolling.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="CanScrollUp" use="optional">
      <annotation><documentation>Possible to scroll up.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="CanScrollDown" use="optional">
      <annotation><documentation>Possible to scroll down.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="CurrentPage" use="optional">
      <annotation><documentation>Current page.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="TotalPages" use="optional">
      <annotation><documentation>Total pages.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="ScrollingData" type="mcml:ScrollingData-i" use="optional">
      <annotation><documentation>ScrollingData inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ScrollingHandler-e">
    <annotation><documentation>Provides common scrolling input behavior to a UI.</documentation></annotation>
    <all>
      <element name="ScrollingData" minOccurs="0">
        <annotation><documentation>Associated ScrollingData of the handler.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="1">
          <element name="ScrollingData" type="mcml:ScrollingData-e"/>
        </choice>
      </complexType>
      </element>
      <element name="GesturePanEnabled" minOccurs="0">
        <annotation><documentation>Indicates if Pan Gestures are enabled on the handler.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="1">
          <element name="ScrollingData" type="mcml:ScrollingData-e"/>
        </choice>
      </complexType>
      </element>
    </all>
    <attribute name="HandleDirectionalKeys" use="optional">
      <annotation><documentation>Handle Up/Down/Left/Right keys.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlePageKeys" use="optional">
      <annotation><documentation>Handle of PageUp/PageDown keys.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandleHomeEndKeys" use="optional">
      <annotation><documentation>Handle of Home/End keys.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlePageCommands" use="optional">
      <annotation><documentation>Handle of PageUp/PageDown commands.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandleMouseWheel" use="optional">
      <annotation><documentation>Handle of mouse wheel scrolling.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="ScrollingData" use="optional">
      <annotation><documentation>Associated ScrollingData of the handler.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="GesturePanEnabled" use="optional">
      <annotation><documentation>Indicates if Pan Gestures are enabled on the handler.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="IsPanning" use="optional">
      <annotation><documentation>Boolean value that indicates whether or not the user is panning</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="IsPanningInertia" use="optional">
      <annotation><documentation>Boolean value that indicates whether or not the user is panning due to inertia</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="OutOfBoundsElasticity" use="optional">
      <annotation><documentation>Indicates the the amount of resistance to apply when panning outide and away from the panning boundaries.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MaximumOutOfBoundsPanAmount" use="optional">
      <annotation><documentation>The maximum amount the user is able to pan outside of the boundary.  When this this threshold is reached, the pan will be terminated and the ScrollingHandler will move back to the relative edge.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="SecureEditableText-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="SecureEditableText-e">
    <annotation><documentation>Represents a user-editable string that is stored encrypted.</documentation></annotation>
    <attribute name="Value" use="optional">
      <annotation><documentation>Current text value.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Overtype" type="mcml:EditableText.Overtype-i" use="optional">
      <annotation><documentation>Enable overtype.</documentation></annotation>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="SecureEditableText" type="mcml:SecureEditableText-i" use="optional">
      <annotation><documentation>SecureEditableText inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="SecureTypingHandler-e">
    <annotation><documentation>Event handler that provides editbox-like behavior to a UI object. String values are encrypted. Display values are always masked.</documentation></annotation>
    <attribute name="EditableText" type="mcml:SecureEditableText-i" use="optional">
      <annotation><documentation>EditableText object associated with the typing handler. The typing handler uses an EditableText object for configuration and storage.</documentation></annotation>
    </attribute>
    <attribute name="MaxLength" use="optional">
      <annotation><documentation>Specifies the maximum number of characters that can be typed.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>The value of the edit control.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="DisplayValue" use="optional">
      <annotation><documentation>Returns the current value (always password masked).</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Set-e">
    <annotation><documentation>Set action.</documentation></annotation>
    <all>
      <element name="Transformer" type="mcml:ITransformer-e" minOccurs="0">
        <annotation><documentation>Data conversion.</documentation></annotation>
      </element>
      <element name="HandleExceptions" minOccurs="0">
        <annotation><documentation>Exception Handlers.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
    </all>
    <attribute name="Value" use="optional">
      <annotation><documentation>Value to set.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Transformer" type="mcml:ITransformer-i" use="optional">
      <annotation><documentation>Data conversion.</documentation></annotation>
    </attribute>
    <attribute name="InvokePolicy" type="mcml:InvokePolicy-i" use="optional">
      <annotation><documentation>Policy on how the target should be set (default is synchronous).</documentation></annotation>
    </attribute>
    <attribute name="Target" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Action target.</documentation></annotation>
    </attribute>
    <attribute name="ExclusiveApply" type="mcml:Action.ExclusiveApply-i" use="optional">
      <annotation><documentation>Specifies if should continue applying actions to this target after an application by this action.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="ShortcutHandler-e">
    <annotation><documentation>Event handler that provides shortcut command input behavior to a UI object.</documentation></annotation>
    <attribute name="Shortcut" use="optional">
      <annotation><documentation>Shortcut command to handle events for.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:ShortcutHandlerCommand-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Command" type="mcml:ICommand-i" use="optional">
      <annotation><documentation>Command associated with the shortcut handler. The invoke method for the command will be called when a shortcut command event occurs.</documentation></annotation>
    </attribute>
    <attribute name="Handle" use="optional">
      <annotation><documentation>Boolean flag indicating whether or not the shortcut handler will allow the event to pass on to other event handlers after it handles the event.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="ShortcutHandlerCommand-i">
    <restriction base="string">
      <enumeration value="Back">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Blue">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ChannelDown">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="ChannelUp">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Clear">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="DVDMenu">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Enter">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="FastForward">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Green">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Hold">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Interactive">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility0">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility1">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility10">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility11">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility2">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility3">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility4">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility5">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility6">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility7">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility8">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="OEMExtensibility9">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PageDown">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PageUp">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Pause">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Play">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="PlayPause">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Record">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Red">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Reveal">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Rewind">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="SkipBack">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="SkipForward">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Stop">
        <annotation><documentation></documentation></annotation>
      </enumeration>
      <enumeration value="Yellow">
        <annotation><documentation></documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="SizeKeyframe-e">
    <annotation><documentation>Size keyframe.</documentation></annotation>
    <attribute name="Value" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Keyframe value.</documentation></annotation>
    </attribute>
    <attribute name="Time" type="mcml:BaseKeyframe.Time-i" use="optional">
      <annotation><documentation>Time that this key frame occurs at.</documentation></annotation>
    </attribute>
    <attribute name="RelativeTo" type="mcml:KeyframeValueReference-i" use="optional">
      <annotation><documentation>Specifies how to interpret the keyframe's value.</documentation></annotation>
    </attribute>
    <attribute name="Interpolation" type="mcml:Interpolation-i" use="optional">
      <annotation><documentation>Interpolation from this keyframe to the next.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="SizingPolicy-i">
    <restriction base="string">
      <enumeration value="SizeToChildren">
        <annotation><documentation>Default to the used size of its children</documentation></annotation>
      </enumeration>
      <enumeration value="SizeToConstraint">
        <annotation><documentation>Default to the maximum possible size</documentation></annotation>
      </enumeration>
      <enumeration value="SizeToContent">
        <annotation><documentation>Default to actual size of the image</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <simpleType name="Sound-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^(animation|color|font|global|image|sound)://(.+):(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(resx|res|file|http|https)://(.+)"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Sound-e">
    <annotation><documentation>Sound object.</documentation></annotation>
    <attribute name="Source" use="optional">
      <annotation><documentation>The source the sound.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Sound" type="mcml:Sound-i" use="optional">
      <annotation><documentation>Sound inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="SwitchAnimation-e">
    <annotation><documentation>SwitchAnimation</documentation></annotation>
    <all>
      <element name="Expression" type="mcml:IValueRange-e" minOccurs="0">
        <annotation><documentation>An object that we will query to get our key into the Options dictionary.</documentation></annotation>
      </element>
      <element name="Options" minOccurs="0">
        <annotation><documentation>A dictionary of animations that we will choose from. The expression result will map to the dictionary key.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
    </all>
    <attribute name="Expression" type="mcml:IValueRange-i" use="optional">
      <annotation><documentation>An object that we will query to get our key into the Options dictionary.</documentation></annotation>
    </attribute>
    <attribute name="Type" type="mcml:AnimationEventType-i" use="optional">
      <annotation><documentation>Type of event that this animation will respond to.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="Text-e">
    <annotation><documentation>Visual primitive used for drawing text.</documentation></annotation>
    <all>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="Content" use="optional">
      <annotation><documentation>Text content.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Font" type="mcml:Font-i" use="optional">
      <annotation><documentation>Text font.</documentation></annotation>
    </attribute>
    <attribute name="Color" type="mcml:Color-i" use="optional">
      <annotation><documentation>Foreground text color.</documentation></annotation>
    </attribute>
    <attribute name="BackColor" type="mcml:Color-i" use="optional">
      <annotation><documentation>Background text color.</documentation></annotation>
    </attribute>
    <attribute name="WordWrap" use="optional">
      <annotation><documentation>Word wrapping.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="MaximumLines" use="optional">
      <annotation><documentation>Maximum number of visible lines.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="HorizontalAlignment" use="optional">
      <annotation><documentation>Horizontal text alignment.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:HorizontalAlignment-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="FadeSize" use="optional">
      <annotation><documentation>Text ellipses fade size.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="float"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="Timer-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="Timer-e">
    <annotation><documentation>Timer services.</documentation></annotation>
    <attribute name="Interval" use="optional">
      <annotation><documentation>Interval between ticks (specified in milliseconds).</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="int"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Enabled" use="optional">
      <annotation><documentation>Toggling Enabled will Start and Stop the timer.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="AutoRepeat" use="optional">
      <annotation><documentation>Auto-repeat or one-shot.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="mcml:BooleanI-i"/>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="Timer" type="mcml:Timer-i" use="optional">
      <annotation><documentation>Timer inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="TimeSpanFormats-i">
    <restriction base="string">
      <enumeration value="Abbreviate">
        <annotation><documentation>Abbreviate words in formatted TimeSpan.</documentation></annotation>
      </enumeration>
      <enumeration value="Long">
        <annotation><documentation>Long TimeSpan format. Includes hours, minutes, and seconds (or just minutes and seconds if less than 60 minutes).</documentation></annotation>
      </enumeration>
      <enumeration value="RoundToMinute">
        <annotation><documentation>Format the TimeSpan rounded to the nearest minute.</documentation></annotation>
      </enumeration>
      <enumeration value="Short">
        <annotation><documentation>Short TimeSpan format. Includes hours and minutes only.</documentation></annotation>
      </enumeration>
      <enumeration value="Words">
        <annotation><documentation>TimeSpan formatted as words.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="TimeSpanTransformer-e">
    <annotation><documentation>Transformer that converts a TimeSpan value to a string.</documentation></annotation>
    <attribute name="Format" type="mcml:TimeSpanFormats-i" use="optional">
      <annotation><documentation>Time span format.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="TransformAnimation-e">
    <annotation><documentation>TransformAnimation enables you to perform simple Time and Value based transformations on all of the keyframes in a reference Animation.</documentation></annotation>
    <all>
      <element name="Source" type="mcml:IAnimationProvider-e" minOccurs="0">
        <annotation><documentation>The reference animation.</documentation></annotation>
      </element>
    </all>
    <attribute name="TimeScale" type="mcml:TransformAnimation.TimeScale-i" use="optional">
      <annotation><documentation>All keyframes from the Source will have their Time multiplied by this value.</documentation></annotation>
    </attribute>
    <attribute name="Delay" type="mcml:TransformAnimation.Delay-i" use="optional">
      <annotation><documentation>All keyframes from the Source past time 0.0 will have their Time offset by this amount.</documentation></annotation>
    </attribute>
    <attribute name="Magnitude" type="mcml:TransformAnimation.Magnitude-i" use="optional">
      <annotation><documentation>All keyframes from the Source will have their Value multiplied by this value.</documentation></annotation>
    </attribute>
    <attribute name="Filter" type="mcml:KeyframeFilter-i" use="optional">
      <annotation><documentation>When processing the keyframes from the Source, only keyframes that match this filter will be transformed.</documentation></annotation>
    </attribute>
    <attribute name="Source" type="mcml:IAnimationProvider-i" use="optional">
      <annotation><documentation>The reference animation.</documentation></annotation>
    </attribute>
    <attribute name="Type" type="mcml:AnimationEventType-i" use="optional">
      <annotation><documentation>Type of event that this animation will respond to.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="TransformAnimation.TimeScale-i">
    <restriction base="float"/>
  </simpleType>

  <simpleType name="TransformAnimation.Delay-i">
    <restriction base="float"/>
  </simpleType>

  <simpleType name="TransformAnimation.Magnitude-i">
    <restriction base="float"/>
  </simpleType>

  <simpleType name="TransformAttribute-i">
    <restriction base="string">
      <enumeration value="Height">
        <annotation><documentation>Height</documentation></annotation>
      </enumeration>
      <enumeration value="Index">
        <annotation><documentation>Index</documentation></annotation>
      </enumeration>
      <enumeration value="Width">
        <annotation><documentation>Width</documentation></annotation>
      </enumeration>
      <enumeration value="X">
        <annotation><documentation>Position along the X axis.</documentation></annotation>
      </enumeration>
      <enumeration value="Y">
        <annotation><documentation>Position along the Y axis.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="TransformByAttributeAnimation-e">
    <annotation><documentation>TransformByAttributeAnimation enables you to perform Time and Value transformations to a reference Animation based on some visual attribute (Width, Index, etc.).</documentation></annotation>
    <all>
      <element name="ValueTransformer" minOccurs="0">
        <annotation><documentation>A transformer object that lets you modify the value used to determine the animation transformations.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="1">
          <element name="MathTransformer" type="mcml:MathTransformer-e"/>
        </choice>
      </complexType>
      </element>
      <element name="Source" type="mcml:IAnimationProvider-e" minOccurs="0">
        <annotation><documentation>The reference animation.</documentation></annotation>
      </element>
    </all>
    <attribute name="Attribute" type="mcml:TransformAttribute-i" use="optional">
      <annotation><documentation>This is the value we will use as the source of the transform.</documentation></annotation>
    </attribute>
    <attribute name="MaxTimeScale" use="optional">
      <annotation><documentation>When determining the per-index time scale, this is the maximum delay value that will be applied.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="MaxDelay" use="optional">
      <annotation><documentation>When determining the per-index delay, this is the maximum delay value that will be applied.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="MaxMagnitude" use="optional">
      <annotation><documentation>When determining the per-index magnitude, this is the maximum scalar value that will be applied.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="Override" use="optional">
      <annotation><documentation>If this value is set, it will be used to determine the transform instead of the dynamically determined attribute.</documentation></annotation>
      <simpleType>
        <restriction base="float"/>
      </simpleType>
    </attribute>
    <attribute name="ValueTransformer" use="optional">
      <annotation><documentation>A transformer object that lets you modify the value used to determine the animation transformations.</documentation></annotation>
      <simpleType>
        <union>
          <simpleType>
            <restriction base="string">
              <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
            </restriction>
          </simpleType>
          <simpleType>
            <restriction base="string">
              <pattern value="^(null|\$Required)$"/>
            </restriction>
          </simpleType>
        </union>
      </simpleType>
    </attribute>
    <attribute name="TimeScale" type="mcml:TransformAnimation.TimeScale-i" use="optional">
      <annotation><documentation>All keyframes from the Source will have their Time multiplied by this value.</documentation></annotation>
    </attribute>
    <attribute name="Delay" type="mcml:TransformAnimation.Delay-i" use="optional">
      <annotation><documentation>All keyframes from the Source past time 0.0 will have their Time offset by this amount.</documentation></annotation>
    </attribute>
    <attribute name="Magnitude" type="mcml:TransformAnimation.Magnitude-i" use="optional">
      <annotation><documentation>All keyframes from the Source will have their Value multiplied by this value.</documentation></annotation>
    </attribute>
    <attribute name="Filter" type="mcml:KeyframeFilter-i" use="optional">
      <annotation><documentation>When processing the keyframes from the Source, only keyframes that match this filter will be transformed.</documentation></annotation>
    </attribute>
    <attribute name="Source" type="mcml:IAnimationProvider-i" use="optional">
      <annotation><documentation>The reference animation.</documentation></annotation>
    </attribute>
    <attribute name="Type" type="mcml:AnimationEventType-i" use="optional">
      <annotation><documentation>Type of event that this animation will respond to.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="TripleTapKeyInfo-e">
    <annotation><documentation>Class that provides header and label information for triple tap keys.</documentation></annotation>
    <attribute name="KeyCode" use="optional">
      <annotation><documentation>String value indicating the keycode for the triple tap key.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Label" use="optional">
      <annotation><documentation>String value indicating the label for the triple tap key.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <complexType name="TypeSelector-e">
    <annotation><documentation>Repeater content selector that matches based on type.</documentation></annotation>
    <attribute name="Type" use="optional">
      <annotation><documentation>Type to match.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="ContentName" use="optional">
      <annotation><documentation>Content name.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="TypingPolicy-i">
    <restriction base="string">
      <enumeration value="Default">
        <annotation><documentation>Accepts raw input. No Triple tap support.</documentation></annotation>
      </enumeration>
      <enumeration value="TripleTap">
        <annotation><documentation>Uses the registered IME for the current locale to provide Triple tap support.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="TypingHandler-e">
    <annotation><documentation>Event handler that provides editbox-like behavior to a UI object.</documentation></annotation>
    <all>
      <element name="Candidates" minOccurs="0">
        <annotation><documentation>List of candidates for the current input. Only applicable when TypingPolicy is set to TripleTap.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
      <element name="KeyInfos" minOccurs="0">
        <annotation><documentation>List of TripleTapKeyInfos for the current mode.</documentation></annotation>
        <complexType>
        <sequence>
          <any minOccurs="1" maxOccurs="unbounded" processContents="lax"/>
        </sequence>
      </complexType>
      </element>
    </all>
    <attribute name="EditableText" type="mcml:EditableText-i" use="optional">
      <annotation><documentation>EditableText object associated with the typing handler. The typing handler uses an EditableText object for configuration and storage.</documentation></annotation>
    </attribute>
    <attribute name="TypingPolicy" type="mcml:TypingPolicy-i" use="optional">
      <annotation><documentation>Specifies if triple tap support is desired or not.</documentation></annotation>
    </attribute>
    <attribute name="MaxLength" use="optional">
      <annotation><documentation>Specifies the maximum number of characters that can be typed.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="PasswordMasked" use="optional">
      <annotation><documentation>Specifies if user input should be hidden.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>The value of the edit control. This is the confirmed value if TypingPolicy is TripleTap.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="DisplayValue" use="optional">
      <annotation><documentation>Returns confirmed value if the text is confirmed or the unconfirmed value if the text is not confirmed.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Confirmed" use="optional">
      <annotation><documentation>Is the current state confirmed or not.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="SupportsCandidates" use="optional">
      <annotation><documentation>Does the current triple tap handler support candidate list. This is false when TypingPolicy is not set to TripleTap.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="SelectCandidate" use="optional">
      <annotation><documentation>The index of the selected item from the candidate list.</documentation></annotation>
      <simpleType>
        <restriction base="int"/>
      </simpleType>
    </attribute>
    <attribute name="HandlerStage" type="mcml:CustomStagedInputHandler.HandlerStage-i" use="optional">
      <annotation><documentation>Stage in the event handling process when the event will be handled.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="TypingInputRejectCause-i">
    <restriction base="string">
      <enumeration value="InputNotAllowable">
        <annotation><documentation>the new input is not an allowed characters.</documentation></annotation>
      </enumeration>
      <enumeration value="MaxLengthExceeded">
        <annotation><documentation>the input exceeded the max length set.</documentation></annotation>
      </enumeration>
      <enumeration value="None">
        <annotation><documentation>not rejected.</documentation></annotation>
      </enumeration>
    </restriction>
  </simpleType>

  <complexType name="UI-e">
    <annotation><documentation>The UI tag is used to define a UI: how it's built visually and how it behaves (both within itself and how it interacts with code/data objects).</documentation></annotation>
    <choice minOccurs="1" maxOccurs="unbounded">
      <element name="Properties" minOccurs="0">
        <annotation><documentation>A set of input parameters to the UI.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="AnchorEdge" type="mcml:AnchorEdge-e"/>
          <element name="AnchorLayoutInput" type="mcml:AnchorLayoutInput-e"/>
          <element name="Animation" type="mcml:Animation-e"/>
          <element name="ArrayListDataSet" type="mcml:ArrayListDataSet-e"/>
          <element name="BooleanChoice" type="mcml:BooleanChoice-e"/>
          <element name="ByteRangedValue" type="mcml:ByteRangedValue-e"/>
          <element name="Choice" type="mcml:Choice-e"/>
          <element name="Color" type="mcml:Color-e"/>
          <element name="Command" type="mcml:Command-e"/>
          <element name="DockLayoutInput" type="mcml:DockLayoutInput-e"/>
          <element name="EditableText" type="mcml:EditableText-e"/>
          <element name="FormLayoutInput" type="mcml:FormLayoutInput-e"/>
          <element name="Font" type="mcml:Font-e"/>
          <element name="ICommand" type="mcml:ICommand-e"/>
          <element name="ILayoutInput" type="mcml:ILayoutInput-e"/>
          <element name="Image" type="mcml:Image-e"/>
          <element name="IModelItem" type="mcml:IModelItem-e"/>
          <element name="Index" type="mcml:Index-e"/>
          <element name="Inset" type="mcml:Inset-e"/>
          <element name="IntRangedValue" type="mcml:IntRangedValue-e"/>
          <element name="ITransformer" type="mcml:ITransformer-e"/>
          <element name="ITransformerEx" type="mcml:ITransformerEx-e"/>
          <element name="IValueRange" type="mcml:IValueRange-e"/>
          <element name="ListDataSet" type="mcml:ListDataSet-e"/>
          <element name="MajorMinor" type="mcml:MajorMinor-e"/>
          <element name="ModelItem" type="mcml:ModelItem-e"/>
          <element name="Point" type="mcml:Point-e"/>
          <element name="PropertySet" type="mcml:PropertySet-e"/>
          <element name="RangedValue" type="mcml:RangedValue-e"/>
          <element name="Rectangle" type="mcml:Rectangle-e"/>
          <element name="Rotation" type="mcml:Rotation-e"/>
          <element name="ScrollingData" type="mcml:ScrollingData-e"/>
          <element name="Size" type="mcml:Size-e"/>
          <element name="Sound" type="mcml:Sound-e"/>
          <element name="Timer" type="mcml:Timer-e"/>
          <element name="Vector3" type="mcml:Vector3-e"/>
          <element name="VirtualList" type="mcml:VirtualList-e"/>
          <element name="ResourceGroup" type="mcml:ResourceGroup-e"/>
          <element name="GestureInertiaSettings" type="mcml:GestureInertiaSettings-e"/>
          <element name="GesturePanHandler" type="mcml:GesturePanHandler-e"/>
          <element name="GestureRatchetSettings" type="mcml:GestureRatchetSettings-e"/>
          <any processContents="lax" namespace="##other"/>
        </choice>
      </complexType>
      </element>
      <element name="Locals" minOccurs="0">
        <annotation><documentation>A set of private objects for use by the UI.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="AnchorEdge" type="mcml:AnchorEdge-e"/>
          <element name="ArrayListDataSet" type="mcml:ArrayListDataSet-e"/>
          <element name="BooleanChoice" type="mcml:BooleanChoice-e"/>
          <element name="BooleanTransformer" type="mcml:BooleanTransformer-e"/>
          <element name="ByteRangedValue" type="mcml:ByteRangedValue-e"/>
          <element name="Choice" type="mcml:Choice-e"/>
          <element name="ClickHandler" type="mcml:ClickHandler-e"/>
          <element name="Command" type="mcml:Command-e"/>
          <element name="DateTimeTransformer" type="mcml:DateTimeTransformer-e"/>
          <element name="EditableText" type="mcml:EditableText-e"/>
          <element name="Environment" type="mcml:Environment-e"/>
          <element name="FormatTransformer" type="mcml:FormatTransformer-e"/>
          <element name="IntRangedValue" type="mcml:IntRangedValue-e"/>
          <element name="KeyHandler" type="mcml:KeyHandler-e"/>
          <element name="ListDataSet" type="mcml:ListDataSet-e"/>
          <element name="MathTransformer" type="mcml:MathTransformer-e"/>
          <element name="ModelItem" type="mcml:ModelItem-e"/>
          <element name="MouseWheelHandler" type="mcml:MouseWheelHandler-e"/>
          <element name="PropertySet" type="mcml:PropertySet-e"/>
          <element name="RangedValue" type="mcml:RangedValue-e"/>
          <element name="ScrollingData" type="mcml:ScrollingData-e"/>
          <element name="ScrollingHandler" type="mcml:ScrollingHandler-e"/>
          <element name="ShortcutHandler" type="mcml:ShortcutHandler-e"/>
          <element name="Timer" type="mcml:Timer-e"/>
          <element name="TimeSpanTransformer" type="mcml:TimeSpanTransformer-e"/>
          <element name="TypingHandler" type="mcml:TypingHandler-e"/>
          <element name="ResourceGroup" type="mcml:ResourceGroup-e"/>
          <element name="GestureInertiaSettings" type="mcml:GestureInertiaSettings-e"/>
          <element name="GesturePanHandler" type="mcml:GesturePanHandler-e"/>
          <element name="GestureRatchetSettings" type="mcml:GestureRatchetSettings-e"/>
          <any processContents="lax" namespace="##other"/>
        </choice>
      </complexType>
      </element>
      <element name="Rules" minOccurs="0">
        <annotation><documentation>A set of rules that collectively provide priority-based data binding services.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="Binding" type="mcml:Binding-e"/>
          <element name="Condition" type="mcml:Condition-e"/>
          <element name="Changed" type="mcml:Changed-e"/>
          <element name="Default" type="mcml:Default-e"/>
          <element name="Rule" type="mcml:Rule-e"/>
        </choice>
      </complexType>
      </element>
      <element name="Content" minOccurs="0">
        <annotation><documentation>The visual content of the UI.</documentation></annotation>
        <complexType>
        <choice minOccurs="1" maxOccurs="unbounded">
          <element name="Clip" type="mcml:Clip-e"/>
          <element name="ColorFill" type="mcml:ColorFill-e"/>
          <element name="Graphic" type="mcml:Graphic-e"/>
          <element name="Host" type="mcml:Host-e"/>
          <element name="NowPlaying" type="mcml:NowPlaying-e"/>
          <element name="Repeater" type="mcml:Repeater-e"/>
          <element name="Scroller" type="mcml:Scroller-e"/>
          <element name="Panel" type="mcml:Panel-e"/>
          <element name="Text" type="mcml:Text-e"/>
          <element name="Video" type="mcml:Video-e"/>
          <any processContents="lax" namespace="##other"/>
        </choice>
        <attribute name="Name" type="string" use="optional">
          <annotation><documentation>Name property.</documentation></annotation>
        </attribute>
      </complexType>
      </element>
    </choice>
    <attribute name="Name" use="optional">
      <annotation><documentation>Name of UI markup.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="BaseUI" use="optional">
      <annotation><documentation>The base UI class that this UI will inherit from.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="Flippable" use="optional">
      <annotation><documentation>Specifies if this UI should mirror on RTL systems.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="ValueSelector-e">
    <annotation><documentation>Repeater content selector that matches by comparing the result of an arbitrary object path with a value.</documentation></annotation>
    <attribute name="Source" type="mcml:ObjectPath-i" use="optional">
      <annotation><documentation>Path to object (via a property, method, or indexer) to compare value against.</documentation></annotation>
    </attribute>
    <attribute name="Value" use="optional">
      <annotation><documentation>Value to check for.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
    <attribute name="ContentName" use="optional">
      <annotation><documentation>Content name.</documentation></annotation>
      <simpleType>
        <restriction base="string"/>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="Video-e">
    <annotation><documentation>Visual primitive used for displaying video.</documentation></annotation>
    <all>
      <element name="Children" type="mcml:ViewItem.Children-e" minOccurs="0">
        <annotation><documentation>List of child elements for the ViewItem.</documentation></annotation>
      </element>
      <element name="Layout" type="mcml:ILayout-e" minOccurs="0">
        <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
      </element>
      <element name="LayoutInput" type="mcml:ILayoutInput-e" minOccurs="0">
        <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
      </element>
      <element name="Animations" type="mcml:ViewItem.Animations-e" minOccurs="0">
        <annotation><documentation>List of animations associated with the ViewItem.</documentation></annotation>
      </element>
    </all>
    <attribute name="LetterboxColor" type="mcml:Color-i" use="optional">
      <annotation><documentation>Letterbox color.</documentation></annotation>
    </attribute>
    <attribute name="IsFullWindow" use="optional">
      <annotation><documentation>Configured for full-window eligibility.</documentation></annotation>
      <simpleType>
        <restriction base="mcml:BooleanI-i"/>
      </simpleType>
    </attribute>
    <attribute name="Scale" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Scaling factor to apply to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Alpha" type="mcml:ViewItem.Alpha-i" use="optional">
      <annotation><documentation>Opacity value for the ViewItem. This value must be between 0.0 and 1.0.</documentation></annotation>
    </attribute>
    <attribute name="ColorFilter" type="mcml:ViewItem.ColorFilter-i" use="optional">
      <annotation><documentation>Color filter that will be applied on top of the color of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Rotation" type="mcml:Rotation-i" use="optional">
      <annotation><documentation>Rotation that will be applied to the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointOffset" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment offset value used when applying a Scale or Rotation to the ViewItem. This value is applied after the CenterPointPercent value has been applied if both are provided.</documentation></annotation>
    </attribute>
    <attribute name="CenterPointPercent" type="mcml:Vector3-i" use="optional">
      <annotation><documentation>Center point adjustment percentage value used when applying a Scale or Rotation to the ViewItem. A value of 1 equals 100%.</documentation></annotation>
    </attribute>
    <attribute name="Visible" type="mcml:ViewItem.Visible-i" use="optional">
      <annotation><documentation>Whether or not the ViewItem will allow itself to be displayed.</documentation></annotation>
    </attribute>
    <attribute name="MaximumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Maximum size in pixels of the ViewItem. If a maximum size is not specified or the maximum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="MinimumSize" type="mcml:Size-i" use="optional">
      <annotation><documentation>Minimum size in pixels of the ViewItem. If a minimum size is not specified or the minimum size is set to zero, the size will not be restricted.</documentation></annotation>
    </attribute>
    <attribute name="Margins" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed outside the boundaries of the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="Padding" type="mcml:Inset-i" use="optional">
      <annotation><documentation>Extra spacing in pixels that is placed between the ViewItem and its children.</documentation></annotation>
    </attribute>
    <attribute name="Layout" type="mcml:ILayout-i" use="optional">
      <annotation><documentation>Layout associated with the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="LayoutInput" type="mcml:ILayoutInput-i" use="optional">
      <annotation><documentation>Layout input used by parent Layouts.</documentation></annotation>
    </attribute>
    <attribute name="AnimationsEnabled" type="mcml:ViewItem.AnimationsEnabled-i" use="optional">
      <annotation><documentation>Enables or disables animations on the ViewItem and its descendents.</documentation></annotation>
    </attribute>
    <attribute name="MouseInteractive" type="mcml:ViewItem.MouseInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to mouse input.</documentation></annotation>
    </attribute>
    <attribute name="TouchInteractive" type="mcml:ViewItem.TouchInteractive-i" use="optional">
      <annotation><documentation>Determines if the ViewItem can receive and react to touch gesture input.</documentation></annotation>
    </attribute>
    <attribute name="Navigation" type="mcml:ViewItem.Navigation-i" use="optional">
      <annotation><documentation>Specifies how the ViewItem should behave during directional navigation.</documentation></annotation>
    </attribute>
    <attribute name="FocusOrder" type="mcml:ViewItem.FocusOrder-i" use="optional">
      <annotation><documentation>Specifies the focus order of the ViewItem within its container.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="mcml:ViewItem.Name-i" use="optional">
      <annotation><documentation>Identifier for the ViewItem.</documentation></annotation>
    </attribute>
    <attribute name="DebugOutline" type="mcml:Color-i" use="optional">
      <annotation><documentation>Enable and set the color of the debugging outline for the ViewItem.</documentation></annotation>
    </attribute>
  </complexType>

  <simpleType name="VirtualList-i">
    <union>
      <simpleType>
        <restriction base="string">
          <pattern value="^\[[a-zA-Z0-9_.!:#]+\]$"/>
        </restriction>
      </simpleType>
      <simpleType>
        <restriction base="string">
          <pattern value="^(null|\$Required)$"/>
        </restriction>
      </simpleType>
    </union>
  </simpleType>

  <complexType name="VirtualList-e">
    <annotation><documentation>Class for maintaining collections of very large data sets, slow acquiring data, or a combination of both.</documentation></annotation>
    <attribute name="Description" type="mcml:ModelItem.Description-i" use="optional">
      <annotation><documentation>Description of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="UniqueId" type="mcml:ModelItem.UniqueId-i" use="optional">
      <annotation><documentation>Unique identifier of this ModelItem.</documentation></annotation>
    </attribute>
    <attribute name="VirtualList" type="mcml:VirtualList-i" use="optional">
      <annotation><documentation>VirtualList inline construction.</documentation></annotation>
    </attribute>
    <attribute name="Name" type="string" use="optional">
      <annotation><documentation>Name property.</documentation></annotation>
    </attribute>
  </complexType>

</schema>

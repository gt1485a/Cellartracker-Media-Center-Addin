<Mcml
    xmlns="http://schemas.microsoft.com/2006/mcml"
    xmlns:me="Me">

  <!-- Accessibility enables access to user interfaces for people that use  -->
  <!-- tools such as screen readers and voice recognition software.         -->
  <!-- Accessibility defines higher-level user interface concepts that MCML -->
  <!-- can map to. This accessibility "hook-up" will make your UI visible   -->
  <!-- to external accessibility tools.                                     -->

  <!-- MCML defines a reserved word that is avaiable via object-paths for   -->
  <!-- configuring your Accessibility support: Accessible.                  -->

  <!-- This sample defines an "AccessibleButton" that shows how to expose   -->
  <!-- the UI as a "PushButton" to accessibility.                           -->

  <!-- Test data for AccessibleButton. -->
  <UI Name="TestAccessibleButton">

    <Content>
      
      <!-- Single button. -->
      <me:AccessibleButton>
        <Command>
          <!-- Test Command. -->
          <Command Description="My accessible button!"/>
        </Command>
      </me:AccessibleButton>

    </Content>

  </UI>


  <!-- A very simple button that hooks up state to the Accessible object. -->
  <!-- This button will be visible to accessibility tools.                -->
  <UI Name="AccessibleButton">

    <Properties>
      <!-- Command is a required parameter. -->
      <Command Name="Command" Command="$Required"/>
    </Properties>

    <Locals>
      <!-- React to "click" input. -->
      <ClickHandler Name="Clicker" Command="[Command]"/>
    </Locals>

    <Rules>

      <!-- Accessibility hook up.                                        -->

      <!-- Wire up via the Accessible object. The default action command -->
      <!-- property is an important property for buttons. The            -->
      <!-- accessibility tool can force the "default action" to occur    -->
      <!-- for this accessible UI element. This will cause the Command   -->
      <!-- to be invoked by the external tool.                           -->

      <!-- Various other state is hooked up as well (all of which are    -->
      <!-- important for accessiblity tools).                            -->
      <Binding Target="[Accessible.IsPressed]"            Source="[Clicker.Clicking]"/>
      <Binding Target="[Accessible.IsFocusable]"          Source="[Input.KeyInteractive]"/>
      <Binding Target="[Accessible.IsFocused]"            Source="[Input.KeyFocus]"/>
      <Binding Target="[Accessible.Name]"                 Source="[Command.Description]"/>
      <Default Target="[Accessible.DefaultActionCommand]" Value="[Command]"/>
      <Default Target="[Accessible.DefaultAction]"        Value="Press"/>
      <Default Target="[Accessible.Role]"                 Value="PushButton"/>

      <!-- Set label. -->
      <Binding Source="[Command.Description]" Target="[Label.Content]"/>

      <!-- Change color on mouse focus. -->
      <Condition Source="[Clicker.Clicking]" SourceValue="true">
        <Actions>
          <Set Target="[Background.Content]" Value="DarkBlue"/>
        </Actions>
      </Condition>

    </Rules>

    <Content>

      <!-- Solid background color. -->
      <ColorFill Name="Background" Content="CornflowerBlue" Padding="5,5,5,5">
        <Children>

          <!-- The label to display. -->
          <Text Name="Label" Color="Gold" Font="Verdana,20"/>

        </Children>
      </ColorFill>

    </Content>

  </UI>

</Mcml>

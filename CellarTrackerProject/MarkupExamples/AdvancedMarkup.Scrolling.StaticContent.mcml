<Mcml 
  xmlns="http://schemas.microsoft.com/2006/mcml"
  xmlns:cor="assembly://MScorLib/System"
  xmlns:me="Me">

  <!-- Static content-based scrolling is useful for non-interactive        -->
  <!-- content such as multiple pages of text or images. By default, a     -->
  <!-- Scroller automatically keeps the current descendent with focus in   -->
  <!-- view. Since non-focusable content (such as static text) can't       -->
  <!-- receive focus, the scroller must be configured to respond to        -->
  <!-- key-based input (page-up/page-down/home/end/etc.).                  -->

  <!-- To enable scrolling with key support in this scenario, a few        -->
  <!-- objects need to be created and hooked up to each other. Here are    -->
  <!-- the main players:                                                   -->

  <!-- ScrollingData:                                                      -->
  <!-- The main point of synchronization of scrolling. It contains the     -->
  <!-- current position of the scroll as well as multiple properties and   -->
  <!-- methods used to change the current scroll position. The main        -->
  <!-- scenario for calling these methods is when creating separate UI for -->
  <!-- enabling the user to change the scroll position using buttons on    -->
  <!-- the screen.                                                         -->

  <!-- ScrollingHandler:                                                   -->
  <!-- Handles user input (both mouse and keyboard) and is the main driver -->
  <!-- of ScrollingData. It has a ScrollingData property that you must     -->
  <!-- supply a ScrollingData instance. ScrollingHandler will react to     -->
  <!-- user input and set properties and call methods on the ScrollingData -->
  <!-- to change the current scroll position.                              -->
  <!-- NOTE: ScrollingHandler must be configured with HandlerStage set as  -->
  <!--       "Direct." This is because the Scroller needs to react         -->
  <!--       directly to user input. By default, ScrollingHandler's        -->
  <!--       HandlerStage is Direct.                                       -->

  <!-- Scroller:                                                           -->
  <!-- The ViewItem itself. It reacts to changes to the ScrollingData. Its -->
  <!-- ScrollingData property must be set with the ScrollingData instance. -->

  <!-- The following example shows how to scroll a large text block.       -->

  <UI Name="NonFocusBasedScroller">

    <Locals>
      <!-- The ScrollingHandler which reacts to user keyboard input. -->
      <!-- Turn on handing of arrow keys for scrolling (not on by    -->
      <!-- default).                                                 -->
      <!-- NOTE: HandlerStage must be "Direct" (which is default).   -->
      <ScrollingHandler Name="ScrollingHandler" HandleDirectionalKeys="true"/>

      <!-- ScrollingData contains many ways to customize how scrolling -->
      <!-- should behave. It has methods to change the current scroll  -->
      <!-- position and it also reports the position. In this case,    -->
      <!-- the default values are used for the sample.                 -->
      <ScrollingData Name="ScrollingData"/>
    </Locals>

    <!-- This is where the scrolling objects get hooked up to each     -->
    <!-- other. Default rules are a good place to do this since Rules  -->
    <!-- get run after the rest of the UI is created and ready to go.  -->
    <Rules>

      <!-- Give ScrollingData to ScrollingHandler. -->
      <Default Target="[ScrollingHandler.ScrollingData]" Value="[ScrollingData]"/>

      <!-- Change background color when gaining focus. -->
      <Condition Source="[Input.KeyFocus]" SourceValue="true" 
                 Target="[Background.Content]" Value="MintCream"/>


      <!-- Bind the current page from the scrolling data to our display. --> 
      <Binding Source="[ScrollingData.CurrentPage]" Target="[CurrentPage.Content]">
        <Transformer><FormatTransformer Format="Current page: {0:F0}"/></Transformer>
      </Binding>

      <!-- Bind the total page count from the scrolling data to our display. -->
      <Binding Source="[ScrollingData.TotalPages]" Target="[TotalPages.Content]">
        <Transformer><FormatTransformer Format="Total pages: {0:F0}"/></Transformer>
      </Binding>

    </Rules>

    <Content>
      <Panel Layout="VerticalFlow">
        <Children>
          <Text Content="More about about MediaCenter and Xbox360:"
                Font="Tahoma,30" Color="Gold" Margins="20,0,0,20"/>

          <!-- Scroller's parent which displays background color. It offsets -->
          <!-- the Scroller using padding and the Scroller fades the clipped -->
          <!-- text outside itself (negative fade size).                     -->
          <!-- This piece of the UI is MouseInteractive.                     -->
          <ColorFill Name="Background" Content="Gray" MouseInteractive="true" 
                     Padding="30,30,30,30" MaximumSize="0,400" Margins="30,0,30,0">
            <Children>

              <!-- The Scroller. It referrs to the ScrollingData too. -->
              <Scroller Orientation="Vertical" FadeSize="-30" ScrollingData="[ScrollingData]">
                <Children>

                  <!-- Text to scroll. Filled with rich text (RTF) content. -->
                  <!-- You can use Wordpad to generate RTF content.         -->
                  <Text Color="SlateGray" Font="Tahoma,30" WordWrap="true"
                        Content="{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Arial;}{\f1\fswiss\fprq2\fcharset0 Verdana;}{\f2\fswiss\fcharset0 Arial;}}{\colortbl ;\red0\green128\blue128;\red0\green0\blue128;\red128\green0\blue0;\red0\green128\blue0;\red128\green0\blue128;}{\*\generator Msftedit 5.41.21.2500;}\viewkind4\uc1\pard\cf1\b\i\f0\fs60 Microsoft Corp.\cf2\b0\i0\f1  today announced it will release a free software update to \cf3\b\i Windows XP Media Center Edition 2005 \cf2\b0\i0 that will enable customers to take advantage of the \cf4\b\i Media Center Extender\cf3  \cf2\b0\i0 technologies built into \cf5\b\i Xbox 360 \cf2\b0\i0 gaming systems to access and enjoy digital entertainment anywhere in the home. Every \cf5\b\i Xbox 360\cf2\b0\i0  will have \cf4\b\i Media Center Extender \cf2\b0\i0 functionality built in and available out of the box. The \cf4\b\i Media Center Extender \cf2\b0\i0 functionality, coupled with the software update for \cf3\b\i Windows XP Media Center Edition 2005\cf2\b0\i0 , will provide customers with seamless access to digital music, video, photos, and standard and high-definition television and movies on Media Center Edition 2005-based PCs through any \cf5\b\i Xbox 360 \cf2\b0\i0 game console in the house.\par\par Inclusion of \cf4\b\i Media Center Extender \cf2\b0\i0 technologies in \cf5\b\i Xbox 360 \cf2\b0\i0 represents Microsoft's latest effort to provide consumers with seamless access to the same great experience provided in Media Center Edition PCs on any TV in the house. The \cf3\b\i Windows XP Media Center Edition 2005 \cf2\b0\i0 experience will be accessible on \cf5\b\i Xbox 360 \cf2\b0\i0 systems by pressing the green button on the new \cf5\b\i Xbox 360 \cf2\b0\i0 remote control. And, for the first time ever, the extender technologies that are built into \cf5\b\i Xbox 360 \cf2\b0\i0 will enable customers to enjoy high-definition entertainment. For example, \cf5\b\i Xbox 360 \cf2\b0\i0 will let players stream high-definition TV and movies stored on Media Center PCs, allowing them to watch a high-definition sports event while they chat with friends in other parts of the country who are watching the same game. Or they can receive a friend's invitation to play a game while watching live television.\cf0\f2\par}">

                    <!-- Smooth scrolling. -->
                    <Animations>
                      <Animation Type="Move">
                        <Keyframes>
                          <PositionKeyframe Time="0" Value="0,0,0" RelativeTo="Current" 
                                            Interpolation="Exp"/>
                          <PositionKeyframe Time=".1" Value="0,0,0"/>
                        </Keyframes>
                      </Animation>
                    </Animations>
                  </Text>

                </Children>
              </Scroller>

            </Children>
          </ColorFill>

          <!-- Display for current/total number of pages -->
          <Text Name="CurrentPage" Font="Tahoma,20" Color="Gold" Margins="20,20,0,0"/>
          <Text Name="TotalPages"  Font="Tahoma,20" Color="Gold" Margins="20,0,0,0"/>
          
        </Children>
      </Panel>
    </Content>

  </UI>
</Mcml>
